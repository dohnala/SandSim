{"version":3,"sources":["webpack:///./render.js","webpack:///./performance.js","webpack:///./ui.js","webpack:///./main.js","webpack:///../engine/pkg/engine_bg.js"],"names":["reglBuilder","require","fpsLabel","document","getElementById","meanFrameTimeLabel","meanRenderTimeLabel","meanTickTimeLabel","lastTickTimeLabel","fps","mean","delta","frames","lastFrameTimeStamp","performance","now","measure","diff","this","push","length","shift","measureMean","frameTime","last","startTime","start","stop","window","paused","renderTime","tickTime","textContent","Math","round","array","sum","i","setInterval","$","canvas","selectedElement","Element","Sand","playButton","pauseButton","nextFrameButton","hide","addClass","click","togglePause","nextTick","map","clear","show","removeClass","change","Empty","Wall","painting","lastPaint","repeat","addEventListener","event","preventDefault","clearInterval","paint","body","startEvent","clientX","clientY","eventDistance","d","add","scale","norm","sub","min","smoothPaint","boundingRect","getBoundingClientRect","scaleX","width","ceil","devicePixelRatio","scaleY","height","canvasLeft","left","canvasTop","top","x","floor","y","insert","a","b","sqrt","pow","mag","magnitude","s","Map","regl","ptr_pixels","pixels","dataTexture","drawMap","Uint8Array","memory","buffer","texture","data","frag","vert","uniforms","attributes","position","count","poll","tick","renderLoop","animationId","requestAnimationFrame","heap","Array","fill","undefined","getObject","idx","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","wasm","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Object","freeze","element","delta_t","Pixel","__wrap","PixelState","obj","create","prototype","velocity","__wbg_new_59cb74e423758ede","addHeapObject","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"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","file":"1.d26d5c6e4cb8506a9d0c.js","sourcesContent":["const reglBuilder = require(\"regl\");\r\nimport { memory } from \"./node_modules/engine/engine_bg\";\r\n\r\nlet startWebGL = ({ canvas, map }) => {\r\n    const regl = reglBuilder({\r\n        canvas\r\n    });\r\n\r\n    const width = map.width();\r\n    const height = map.height();\r\n    let ptr_pixels = map.pixels();\r\n    let pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n    const dataTexture = regl.texture({ width, height, data: pixels });\r\n\r\n    let drawMap = regl({\r\n        frag: `\r\n        precision highp float;\r\n        uniform sampler2D data;\r\n        varying vec2 uv;\r\n        void main() {\r\n            vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\r\n            vec4 data = texture2D(data, textCoord);\r\n            int element = int((data.r * 255.) + 0.1);\r\n            vec4 color;\r\n            \r\n            // empty\r\n            if (element == 0) {\r\n                color = vec4(255, 255, 255, 1);\r\n            }\r\n            \r\n            if (element == 1) {\r\n                color = vec4(0, 0, 0, 1);\r\n            }\r\n            \r\n            // sand\r\n            if (element == 2) {\r\n                color = vec4(0.76, 0.7, 0.5, 1);\r\n            }\r\n            \r\n            gl_FragColor = color;\r\n        }`,\r\n\r\n        vert: `\r\n        precision mediump float;\r\n        attribute vec2 position;\r\n        varying vec2 uv;\r\n        void main() {\r\n            uv = position;\r\n            gl_Position = vec4(position, 0, 1);\r\n        }`,\r\n\r\n        uniforms: {\r\n            data: () => {\r\n                ptr_pixels = map.pixels();\r\n                pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n\r\n                return dataTexture({width, height, data: pixels});\r\n            },\r\n        },\r\n\r\n        attributes: {\r\n            position: [[-1, 4], [-1, -1], [4, -1]]\r\n        },\r\n\r\n        count: 3,\r\n    });\r\n\r\n    return () => {\r\n        regl.poll();\r\n        drawMap();\r\n    };\r\n};\r\n\r\nexport { startWebGL};","const MEAN_FRAMES_SIZE = 100;\r\n\r\nlet fpsLabel = document.getElementById(\"fps\");\r\nlet meanFrameTimeLabel = document.getElementById(\"meanFrameTime\");\r\nlet meanRenderTimeLabel = document.getElementById(\"meanRenderTime\");\r\nlet meanTickTimeLabel = document.getElementById(\"meanTickTime\");\r\nlet lastTickTimeLabel = document.getElementById(\"lastTickTime\");\r\n\r\nconst fps = {\r\n    mean: 0,\r\n    delta: 0,\r\n    frames: [],\r\n    lastFrameTimeStamp: performance.now(),\r\n\r\n    measure() {\r\n        const now = performance.now();\r\n        const diff = now - this.lastFrameTimeStamp;\r\n        this.lastFrameTimeStamp = now;\r\n        const fps = (1 / diff) * 1000;\r\n        this.delta = diff / 1000;\r\n\r\n        this.frames.push(fps);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst frameTime =  {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst renderTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst tickTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        lastTickTimeLabel.textContent = window.paused ? `${Math.round(this.last)}ms` : \"\";\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst measureMean = array => {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        sum += array[i];\r\n    }\r\n\r\n    return  sum / array.length;\r\n}\r\n\r\nconst updateLabels = () => {\r\n    fpsLabel.textContent = `FPS: ${Math.round(fps.mean)}`;\r\n    meanFrameTimeLabel.textContent = `${Math.round(frameTime.mean)}ms`;\r\n    meanRenderTimeLabel.textContent = `${Math.round(renderTime.mean)}ms`;\r\n    meanTickTimeLabel.textContent = `${Math.round(tickTime.mean)}ms`;\r\n}\r\n\r\nsetInterval(updateLabels, 500);\r\n\r\nexport { fps, frameTime, renderTime, tickTime};","import {tickTime} from \"./performance\";\r\n\r\nvar $ = require( \"jquery\" );\r\n\r\nimport { width, height, map, nextTick } from \"./main.js\";\r\nimport { Element } from \"./node_modules/engine/engine.js\";\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\nlet selectedElement = Element.Sand;\r\n\r\nlet paused = false;\r\nlet playButton = $('#play')\r\nlet pauseButton = $('#pause')\r\nlet nextFrameButton = $('#nextFrame')\r\n\r\nplayButton.hide();\r\nnextFrameButton.addClass(\"disabled\");\r\n\r\nplayButton.click(() => togglePause());\r\npauseButton.click(() => togglePause());\r\n\r\nnextFrameButton.click(() => {\r\n    if (paused) {\r\n        tickTime.start();\r\n        nextTick();\r\n        tickTime.stop();\r\n    }\r\n});\r\n\r\n$('#reset').click(() => map.clear());\r\n\r\nconst togglePause = () => {\r\n    paused = !paused;\r\n    window.paused = paused;\r\n\r\n    if (paused) {\r\n        playButton.show();\r\n        pauseButton.hide();\r\n        nextFrameButton.removeClass(\"disabled\");\r\n    } else {\r\n        playButton.hide();\r\n        pauseButton.show();\r\n        nextFrameButton.addClass(\"disabled\");\r\n    }\r\n}\r\n\r\n$('#emptyElement').change(() => selectedElement = Element.Empty);\r\n$('#wallElement').change(() => selectedElement = Element.Wall);\r\n$('#sandElement').change(() => selectedElement = Element.Sand);\r\n\r\nlet painting = false;\r\nlet lastPaint = null;\r\nlet repeat = null;\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\n    event.preventDefault();\r\n    painting = true;\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n    paint(event);\r\n    lastPaint = event;\r\n});\r\n\r\ndocument.body.addEventListener(\"mouseup\", event => {\r\n    clearInterval(repeat);\r\n    if (painting) {\r\n        event.preventDefault();\r\n        lastPaint = null;\r\n        painting = false;\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", event => {\r\n    clearInterval(repeat);\r\n    smoothPaint(event);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseleave\", event => {\r\n    clearInterval(repeat);\r\n    lastPaint = null;\r\n});\r\n\r\nconst paint = event => {\r\n    if (!painting) {\r\n        return;\r\n    }\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const scaleX = canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width;\r\n    const scaleY = canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height;\r\n\r\n    const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n    const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n    const x = Math.min(Math.floor(canvasLeft), width - 1);\r\n    const y = Math.min(Math.floor(canvasTop), height - 1);\r\n\r\n    map.insert(x, y, selectedElement);\r\n};\r\n\r\nfunction smoothPaint(event) {\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n\r\n    let startEvent = { clientX: event.clientX, clientY: event.clientY };\r\n\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    paint(startEvent);\r\n\r\n    if (lastPaint) {\r\n        while (eventDistance(startEvent, lastPaint) > 1 / 3) {\r\n            let d = eventDistance(startEvent, lastPaint);\r\n            startEvent = add(\r\n                startEvent,\r\n                scale(norm(sub(lastPaint, event)), Math.min(1 / 3, d))\r\n            );\r\n            i++;\r\n            if (i > 1000) {\r\n                break;\r\n            }\r\n            paint(startEvent);\r\n        }\r\n    }\r\n    lastPaint = event;\r\n}\r\n\r\nconst eventDistance = (a, b) => {\r\n    return Math.sqrt(\r\n        Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\r\n        2\r\n    );\r\n};\r\n\r\nconst add = (a, b) => {\r\n    return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\r\n};\r\n\r\nconst sub = (a, b) => {\r\n    return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\r\n};\r\n\r\nconst norm = a => {\r\n    let mag = magnitude(a);\r\n    return { clientX: a.clientX / mag, clientY: a.clientY / mag };\r\n};\r\n\r\nconst scale = (a, s) => {\r\n    return { clientX: a.clientX * s, clientY: a.clientY * s };\r\n};\r\n\r\nconst magnitude = a => {\r\n    return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\r\n};","import { Map } from \"./node_modules/engine/engine.js\";\r\nimport { startWebGL } from \"./render\";\r\nimport {} from \"./ui\";\r\nimport {fps, frameTime, renderTime, tickTime} from \"./performance\";\r\n\r\nlet width = 128;\r\nlet height = 128;\r\nconst map = Map.new(width, height);\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\ncanvas.width = width * Math.ceil(window.devicePixelRatio);\r\ncanvas.height = height * Math.ceil(window.devicePixelRatio);\r\n\r\nlet drawMap = startWebGL({ canvas, map });\r\n\r\nconst renderLoop = () => {\r\n    fps.measure();\r\n    frameTime.start();\r\n\r\n    if (!window.paused) {\r\n        tickTime.start();\r\n        nextTick();\r\n        tickTime.stop();\r\n    }\r\n\r\n    renderTime.start();\r\n    drawMap();\r\n    renderTime.stop();\r\n\r\n    frameTime.stop();\r\n\r\n    window.animationId = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nconst nextTick = () => {\r\n    map.tick(fps.delta);\r\n}\r\n\r\nrenderLoop();\r\n\r\nexport { canvas, width, height, map, nextTick};","import * as wasm from './engine_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const Element = Object.freeze({ Empty:0,\"0\":\"Empty\",Wall:1,\"1\":\"Wall\",Sand:2,\"2\":\"Sand\", });\n/**\n*/\nexport class Map {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Map.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_map_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Map}\n    */\n    static new(width, height) {\n        var ret = wasm.map_new(width, height);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} element\n    */\n    insert(x, y, element) {\n        wasm.map_insert(this.ptr, x, y, element);\n    }\n    /**\n    */\n    clear() {\n        wasm.map_clear(this.ptr);\n    }\n    /**\n    * @param {number} delta_t\n    */\n    tick(delta_t) {\n        wasm.map_tick(this.ptr, delta_t);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.map_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.map_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    generation() {\n        var ret = wasm.map_generation(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    pixels() {\n        var ret = wasm.map_pixels(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {Pixel}\n    */\n    get_pixel(x, y) {\n        var ret = wasm.map_get_pixel(this.ptr, x, y);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {PixelState}\n    */\n    get_pixel_state(x, y) {\n        var ret = wasm.map_get_pixel_state(this.ptr, x, y);\n        return PixelState.__wrap(ret);\n    }\n}\n/**\n*/\nexport class Pixel {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Pixel.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pixel_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {Pixel}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class PixelState {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PixelState.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pixelstate_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {PixelState}\n    */\n    static new(element) {\n        var ret = wasm.pixelstate_new(element);\n        return PixelState.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixelstate_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_velocity_y() {\n        var ret = wasm.pixelstate_get_velocity_y(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} velocity\n    */\n    set_velocity_y(velocity) {\n        wasm.pixelstate_set_velocity_y(this.ptr, velocity);\n    }\n    /**\n    * @param {number} velocity\n    */\n    add_velocity_y(velocity) {\n        wasm.pixelstate_add_velocity_y(this.ptr, velocity);\n    }\n    /**\n    * @returns {boolean}\n    */\n    clock_flag() {\n        var ret = wasm.pixelstate_clock_flag(this.ptr);\n        return ret !== 0;\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}