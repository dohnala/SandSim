{"version":3,"sources":["webpack:///./vars.js","webpack:///./performance.js","webpack:///./ui.js","webpack:///./main.js","webpack:///./render.js","webpack:///../engine/pkg/engine_bg.js"],"names":["elements","key","Element","Empty","value","name","color","Wall","Sand","mapSizes","chunkSizes","mapGenerators","MapGenerator","EMPTY","CAVE","fpsLabel","document","getElementById","meanRenderTimeLabel","meanTickTimeLabel","lastTickTimeLabel","meanPixelsProcessedLabel","lastPixelsProcessedLabel","fps","mean","delta","frames","lastFrameTimeStamp","performance","now","measure","diff","this","push","length","shift","measureMean","renderTime","last","startTime","start","stop","window","paused","frameTime","tickTime","textContent","Math","round","pixelsProcessed","pixels","percentage","config","size","reset","array","sum","i","max","setInterval","$","require","canvas","ready","addMapSizes","addChunkSizes","addMapGenerators","addElements","updateCreateForm","createButton","generateSeedButton","useChunksCheckbox","chunkSizeSelect","showActiveChunks","showActiveChunksCheckbox","click","Number","val","gravity","clamp","maxVelocity","useChunks","is","chunkSize","generator","hasOwnProperty","mapGeneratorByName","seed","createMap","generateSeed","prop","forEach","option","append","change","checked","playButton","pauseButton","nextFrameButton","resetButton","hide","addClass","togglePause","nextFrame","resetMap","keypress","event","keyCode","show","removeClass","nextTick","map","clear","selectedElement","radio","attr","brushSize","step","min","brushSizeSlider","on","bind","originalEvent","wheelDelta","detail","inspectPixelPosition","inspecting","inspectRepeat","inspectCheckBox","inspectDetails","clearInterval","inspectPixel","pixel","pixel_state","text","element","velocity_y","painting","lastPaint","repeat","addEventListener","preventDefault","paint","body","smoothPaint","getPixelPosition","findInspectPixelPosition","drawMap","pixelPosition","insert","startEvent","clientX","clientY","eventDistance","d","add","scale","norm","sub","boundingRect","getBoundingClientRect","scaleX","width","ceil","devicePixelRatio","scaleY","height","canvasLeft","left","canvasTop","top","floor","a","b","sqrt","pow","mag","magnitude","s","reglBuilder","startWebGL","regl","ptr_pixels","Uint8Array","memory","buffer","dataTexture","texture","data","frag","vert","uniforms","attributes","position","count","props","chunkDrawCalls","chunks_count","chunk","offset","x","y","lineWidth","primitive","poll","drawChunks","random","Map","MapConfig","tick","renderLoop","animationId","requestAnimationFrame","heap","Array","fill","undefined","getObject","idx","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","wasm","getStringFromWasm0","ptr","len","subarray","_assertClass","instance","klass","Error","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Object","freeze","Chunk","__destroy_into_raw","obj","create","prototype","__wrap","radius","Pixel","PixelState","ptr0","arg0","max_velocity","use_chunks","chunk_size","__wbg_new_59cb74e423758ede","addHeapObject","__wbg_stack_558ba5917b466edd","arg1","malloc","realloc","mem","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"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","file":"1.83280461e482053d520c.js","sourcesContent":["import {Element, MapGenerator} from \"engine\";\r\n\r\nconst elements = [\r\n    {key: Element.Empty, value: {name: \"Empty\", color: \"rgba(255,255,255,1)\"}},\r\n    {key: Element.Wall, value: {name: \"Wall\", color: \"rgba(0,0,0,1)\"}},\r\n    {key: Element.Sand, value: {name: \"Sand\", color: \"rgba(194, 178, 127, 1)\"}}];\r\n\r\nconst mapSizes = [64, 128, 256, 512];\r\nconst chunkSizes = [16, 32, 64];\r\n\r\nconst mapGenerators = [\r\n    {key: MapGenerator.EMPTY, value: {name: \"Empty\"}},\r\n    {key: MapGenerator.CAVE, value: {name: \"Cave\"}},];\r\n\r\nconst mapGeneratorByName = name => {\r\n    for (let key in mapGenerators) {\r\n        if (mapGenerators.hasOwnProperty(key)) {\r\n            if (mapGenerators[key].value.name === name) {\r\n                return key;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport {elements, mapSizes, chunkSizes, mapGenerators, mapGeneratorByName}","import {config} from \"./main\";\r\n\r\nconst MEAN_FRAMES_SIZE = 100;\r\n\r\nlet fpsLabel = document.getElementById(\"fps\");\r\nlet meanRenderTimeLabel = document.getElementById(\"meanRenderTime\");\r\nlet meanTickTimeLabel = document.getElementById(\"meanTickTime\");\r\nlet lastTickTimeLabel = document.getElementById(\"lastTickTime\");\r\nlet meanPixelsProcessedLabel = document.getElementById(\"meanPixelsProcessed\");\r\nlet lastPixelsProcessedLabel = document.getElementById(\"lastPixelsProcessed\");\r\n\r\nconst fps = {\r\n    mean: 0,\r\n    delta: 0,\r\n    frames: [],\r\n    lastFrameTimeStamp: performance.now(),\r\n\r\n    measure() {\r\n        const now = performance.now();\r\n        const diff = now - this.lastFrameTimeStamp;\r\n        this.lastFrameTimeStamp = now;\r\n        const fps = (1 / diff) * 1000;\r\n        this.delta = diff / 1000;\r\n\r\n        this.frames.push(fps);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst renderTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst tickTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        lastTickTimeLabel.textContent = window.paused ? `${Math.round(this.last)}ms` : \"\";\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst pixelsProcessed = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n\r\n    measure(pixels) {\r\n        this.last = pixels;\r\n\r\n        lastPixelsProcessedLabel.textContent = window.paused ? `${Math.round(this.last)} \r\n        (${percentage(this.last, config.size*config.size)}%)` : \"\";\r\n\r\n        this.frames.push(pixels);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    },\r\n\r\n    reset() {\r\n        this.mean = 0;\r\n        this.last = 0;\r\n        this.frames = [];\r\n    }\r\n}\r\n\r\nconst measureMean = array => {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        sum += array[i];\r\n    }\r\n\r\n    return  sum / array.length;\r\n}\r\n\r\nconst percentage = (value, max) => {\r\n    return Math.round((100 * value) / max);\r\n}\r\n\r\nconst updateLabels = () => {\r\n    fpsLabel.textContent = `FPS: ${Math.round(fps.mean)}`;\r\n    meanRenderTimeLabel.textContent = `${Math.round(renderTime.mean)}ms`;\r\n    meanTickTimeLabel.textContent = `${Math.round(tickTime.mean)}ms`;\r\n    meanPixelsProcessedLabel.textContent = `${Math.round(pixelsProcessed.mean)} \r\n    (${percentage(Math.round(pixelsProcessed.mean), config.size*config.size)}%)`;\r\n}\r\n\r\nsetInterval(updateLabels, 100);\r\n\r\nexport { fps, renderTime, tickTime, pixelsProcessed};","import {config, createMap, map, nextTick, generateSeed} from \"./main.js\";\r\nimport {elements, mapGenerators, mapGeneratorByName, mapSizes, chunkSizes} from \"./vars\";\r\nimport {pixelsProcessed, tickTime} from \"./performance\";\r\n\r\nvar $ = require( \"jquery\" );\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\n$('document').ready(function(){\r\n    addMapSizes();\r\n    addChunkSizes();\r\n    addMapGenerators();\r\n    addElements();\r\n    updateCreateForm()\r\n\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  CREATE MAP\r\n// -----------------------------------------------------------------------------------------------\r\nlet createButton = $('#create');\r\nlet generateSeedButton = $('#generateSeed');\r\nlet useChunksCheckbox = $('#configUseChunks');\r\nlet chunkSizeSelect = $('#configChunkSize');\r\nlet showActiveChunks = false;\r\nlet showActiveChunksCheckbox = $('#showActiveChunks');\r\n\r\ncreateButton.click(() => {\r\n    config.size = Number($('#configSize').val());\r\n    config.gravity = clamp($('#configGravity').val(), -1, 1);\r\n    config.maxVelocity = clamp($('#configMaxVelocity').val(), 0, 100);\r\n    config.useChunks = useChunksCheckbox.is(\":checked\");\r\n    config.chunkSize = Number(chunkSizeSelect.val());\r\n    config.generator = mapGeneratorByName($('#configGenerator').val());\r\n    config.seed = Number($('#seed').val());\r\n\r\n    createMap()\r\n    updateCreateForm();\r\n});\r\n\r\ngenerateSeedButton.click(() => {\r\n    config.seed = generateSeed();\r\n    updateCreateForm();\r\n});\r\n\r\nconst updateCreateForm = () => {\r\n    $('#configSize').val(config.size);\r\n    $('#configGravity').val(config.gravity);\r\n    $('#configMaxVelocity').val(config.maxVelocity);\r\n    $('#configGenerator').val(mapGenerators[config.generator].value.name);\r\n    $('#seed').val(config.seed);\r\n\r\n    useChunksCheckbox.prop('checked', config.useChunks);\r\n    chunkSizeSelect.val(config.chunkSize);\r\n    chunkSizeSelect.prop('disabled', !config.useChunks);\r\n}\r\n\r\nconst addMapSizes = () => {\r\n    mapSizes.forEach(function (value) {\r\n        let option = `<option>${value}</option>`;\r\n\r\n        $('#configSize').append(option);\r\n    });\r\n}\r\n\r\nconst addChunkSizes = () => {\r\n    chunkSizes.forEach(function (value) {\r\n        let option = `<option>${value}</option>`;\r\n\r\n        $('#configChunkSize').append(option);\r\n    });\r\n}\r\n\r\nconst addMapGenerators = () => {\r\n    for (let key in mapGenerators) {\r\n        if (mapGenerators.hasOwnProperty(key)) {\r\n            let option = `<option>${mapGenerators[key].value.name}</option>`;\r\n\r\n            $('#configGenerator').append(option);\r\n        }\r\n    }\r\n}\r\n\r\nuseChunksCheckbox.change(function() {\r\n    chunkSizeSelect.prop('disabled', !this.checked)\r\n    showActiveChunksCheckbox.prop('disabled', !this.checked)\r\n});\r\n\r\nshowActiveChunksCheckbox.change(function() {\r\n    showActiveChunks = this.checked;\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  ACTIONS\r\n// -----------------------------------------------------------------------------------------------\r\nlet paused = false;\r\nlet playButton = $('#play');\r\nlet pauseButton = $('#pause');\r\nlet nextFrameButton = $('#nextFrame');\r\nlet resetButton = $('#reset');\r\n\r\nplayButton.hide();\r\nnextFrameButton.addClass(\"disabled\");\r\n\r\nplayButton.click(() => togglePause());\r\npauseButton.click(() => togglePause());\r\nnextFrameButton.click(() => nextFrame());\r\nresetButton.click(() => resetMap());\r\n\r\n$('body').keypress(event => {\r\n    // P\r\n    if (event.keyCode === 112) {\r\n        togglePause();\r\n    }\r\n    // F\r\n    else if (event.keyCode === 102) {\r\n        nextFrame();\r\n    }\r\n    // R\r\n    else if (event.keyCode === 114) {\r\n        resetMap();\r\n    }\r\n})\r\n\r\nconst togglePause = () => {\r\n    paused = !paused;\r\n    window.paused = paused;\r\n\r\n    if (paused) {\r\n        playButton.show();\r\n        pauseButton.hide();\r\n        nextFrameButton.removeClass(\"disabled\");\r\n    } else {\r\n        playButton.hide();\r\n        pauseButton.show();\r\n        nextFrameButton.addClass(\"disabled\");\r\n    }\r\n}\r\n\r\nconst nextFrame = () => {\r\n    if (paused) {\r\n        tickTime.start();\r\n        pixelsProcessed.measure(nextTick());\r\n        tickTime.stop();\r\n    }\r\n}\r\n\r\nconst resetMap = () => {\r\n    map.clear();\r\n    pixelsProcessed.reset();\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  ELEMENTS\r\n// -----------------------------------------------------------------------------------------------\r\nlet selectedElement = null;\r\n\r\nconst addElements = () => {\r\n    for (let key in elements) {\r\n        if (elements.hasOwnProperty(key)) {\r\n            let radio = `\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"element_${key}\">\r\n                    <label class=\"form-check-label\" for=\"element_${key}\">\r\n                        <i class=\"bi bi-square-fill\" style=\"color: ${elements[key].value.color}\"></i>\r\n                        <label>${elements[key].value.name}</label>\r\n                    </label>\r\n                </div>`;\r\n\r\n            $('#painting').append(radio);\r\n            $('#element_' + key + '').change(() => selectedElement = Number(key));\r\n        }\r\n    }\r\n\r\n    // Select Sand by default\r\n    selectedElement = 2;\r\n    $('#element_2').attr('checked', true)\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  BRUSH SETTINGS\r\n// -----------------------------------------------------------------------------------------------\r\nlet brushSize = {\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 5\r\n}\r\n\r\nlet brushSizeSlider = $('#brushSize');\r\n\r\nbrushSizeSlider.on(\"change\", function () {\r\n    brushSize.value = clamp(Number($(this).val()), brushSize.min, brushSize.max);\r\n});\r\n\r\n$(window).bind('mousewheel DOMMouseScroll', function(event){\r\n    if (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0) {\r\n        brushSize.value = clamp(brushSize.value + brushSize.step, brushSize.min, brushSize.max);\r\n        brushSizeSlider.val(brushSize.value);\r\n    } else {\r\n        brushSize.value = clamp(brushSize.value - brushSize.step, brushSize.min, brushSize.max);\r\n        brushSizeSlider.val(brushSize.value);\r\n    }\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  PIXEL INSPECTION\r\n// -----------------------------------------------------------------------------------------------\r\nlet inspectPixelPosition = null;\r\nlet inspecting = false;\r\nlet inspectRepeat = null;\r\nlet inspectCheckBox = $('#inspectCheck');\r\nlet inspectDetails = $('#inspectDetails');\r\n\r\ninspectDetails.hide();\r\n\r\ninspectCheckBox.click(() => {\r\n    if (inspectCheckBox.prop('checked')) {\r\n        inspecting = true;\r\n        clearInterval(inspectRepeat);\r\n        inspectRepeat = window.setInterval(() => inspectPixel(), 100);\r\n    } else {\r\n        inspecting = false;\r\n        clearInterval(inspectRepeat);\r\n    }\r\n})\r\n\r\nconst findInspectPixelPosition = event => {\r\n    if (inspectCheckBox.prop('checked')) {\r\n        inspectPixelPosition = getPixelPosition(event);\r\n    } else {\r\n        inspectPixelPosition = null;\r\n    }\r\n}\r\n\r\nconst inspectPixel = event => {\r\n    if (inspecting && inspectPixelPosition) {\r\n        let pixel = map.pixel_state(inspectPixelPosition[0], inspectPixelPosition[1])\r\n\r\n        if (pixel) {\r\n            inspectDetails.show();\r\n            $('#inspectElement').text(elements[pixel.element()].value.name);\r\n            $('#inspectPosition').text(\"(\" + inspectPixelPosition[0] + \", \" + inspectPixelPosition[1] + \")\");\r\n            $('#inspectVelocity').text(\"(0, \" + pixel.velocity_y() + \")\");\r\n        }\r\n    } else {\r\n        inspectDetails.hide();\r\n    }\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  PAINTING\r\n// -----------------------------------------------------------------------------------------------\r\nlet painting = false;\r\nlet lastPaint = null;\r\nlet repeat = null;\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\n    event.preventDefault();\r\n    painting = true;\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n    paint(event);\r\n    lastPaint = event;\r\n});\r\n\r\ndocument.body.addEventListener(\"mouseup\", event => {\r\n    clearInterval(repeat);\r\n    if (painting) {\r\n        event.preventDefault();\r\n        lastPaint = null;\r\n        painting = false;\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", event => {\r\n    clearInterval(repeat);\r\n    smoothPaint(event);\r\n    findInspectPixelPosition(event);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseleave\", event => {\r\n    clearInterval(repeat);\r\n    lastPaint = null;\r\n    inspectPixelPosition = null;\r\n});\r\n\r\nconst paint = event => {\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let pixelPosition = getPixelPosition(event);\r\n\r\n    map.insert(pixelPosition[0], pixelPosition[1], selectedElement, brushSize.value);\r\n};\r\n\r\nconst smoothPaint = event => {\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n\r\n    let startEvent = { clientX: event.clientX, clientY: event.clientY };\r\n\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    paint(startEvent);\r\n\r\n    if (lastPaint) {\r\n        while (eventDistance(startEvent, lastPaint) > 1 / 3) {\r\n            let d = eventDistance(startEvent, lastPaint);\r\n            startEvent = add(\r\n                startEvent,\r\n                scale(norm(sub(lastPaint, event)), Math.min(1 / 3, d))\r\n            );\r\n            i++;\r\n            if (i > 1000) {\r\n                break;\r\n            }\r\n            paint(startEvent);\r\n        }\r\n    }\r\n    lastPaint = event;\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  UTILS\r\n// -----------------------------------------------------------------------------------------------\r\n\r\nconst getPixelPosition = event => {\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const scaleX = canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width;\r\n    const scaleY = canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height;\r\n\r\n    const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n    const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n    const x = Math.max(Math.min(Math.floor(canvasLeft), config.size - 1), 0);\r\n    const y = Math.max(Math.min(Math.floor(canvasTop), config.size - 1), 0);\r\n\r\n    return [x, y];\r\n}\r\n\r\nconst eventDistance = (a, b) => {\r\n    return Math.sqrt(\r\n        Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\r\n        2\r\n    );\r\n};\r\n\r\nconst add = (a, b) => {\r\n    return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\r\n};\r\n\r\nconst sub = (a, b) => {\r\n    return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\r\n};\r\n\r\nconst norm = a => {\r\n    let mag = magnitude(a);\r\n    return { clientX: a.clientX / mag, clientY: a.clientY / mag };\r\n};\r\n\r\nconst scale = (a, s) => {\r\n    return { clientX: a.clientX * s, clientY: a.clientY * s };\r\n};\r\n\r\nconst magnitude = a => {\r\n    return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\r\n};\r\n\r\nconst clamp = function(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nexport {showActiveChunks}","import {Map, MapConfig, MapGenerator} from \"./node_modules/engine/engine.js\";\r\nimport { startWebGL } from \"./render\";\r\nimport {} from \"./ui\";\r\nimport {fps, pixelsProcessed, renderTime, tickTime} from \"./performance\";\r\n\r\nconst generateSeed = () => {\r\n    return Math.floor(Math.random() * Math.floor(10000));\r\n}\r\n\r\nlet config = {\r\n    size: 128,\r\n    gravity: 0.2,\r\n    maxVelocity: 5,\r\n    useChunks: true,\r\n    chunkSize: 16,\r\n    generator: MapGenerator.EMPTY,\r\n    seed: 1,\r\n}\r\n\r\nlet map;\r\nlet drawMap;\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\nconst createMap = () => {\r\n    map = Map.new(MapConfig.new(\r\n        config.size,\r\n        config.gravity,\r\n        config.maxVelocity,\r\n        config.useChunks,\r\n        config.chunkSize,\r\n        config.seed),\r\n        Number(config.generator));\r\n    canvas.width = config.size * Math.ceil(window.devicePixelRatio);\r\n    canvas.height = config.size * Math.ceil(window.devicePixelRatio);\r\n    drawMap = startWebGL({ canvas, map, config });\r\n\r\n    pixelsProcessed.reset();\r\n}\r\n\r\ncreateMap();\r\n\r\nconst renderLoop = () => {\r\n    fps.measure();\r\n\r\n    if (!window.paused) {\r\n        tickTime.start();\r\n        pixelsProcessed.measure(nextTick());\r\n        tickTime.stop();\r\n    }\r\n\r\n    renderTime.start();\r\n    drawMap();\r\n    renderTime.stop();\r\n\r\n    window.animationId = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nconst nextTick = () => {\r\n    return map.tick(fps.delta);\r\n}\r\n\r\nrenderLoop();\r\n\r\nexport { canvas, config, map, createMap, nextTick, generateSeed};","import {showActiveChunks} from \"./ui\";\r\n\r\nconst reglBuilder = require(\"regl\");\r\nimport { memory } from \"./node_modules/engine/engine_bg\";\r\n\r\nlet startWebGL = ({ canvas, map, config }) => {\r\n    const regl = reglBuilder({\r\n        canvas\r\n    });\r\n\r\n    const size = map.size();\r\n    let ptr_pixels = map.pixels();\r\n    let pixels = new Uint8Array(memory.buffer, ptr_pixels, size * size * 4);\r\n    const dataTexture = regl.texture({ width: size, height: size, data: pixels });\r\n\r\n    let drawMap = regl({\r\n        frag: `\r\n        precision highp float;\r\n        uniform sampler2D data;\r\n        varying vec2 uv;\r\n        void main() {\r\n            vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\r\n            vec4 data = texture2D(data, textCoord);\r\n            int element = int((data.r * 255.) + 0.1);\r\n            vec4 color;\r\n            \r\n            // empty\r\n            if (element == 0) {\r\n                color = vec4(255, 255, 255, 1);\r\n            }\r\n            \r\n            if (element == 1) {\r\n                color = vec4(0, 0, 0, 1);\r\n            }\r\n            \r\n            // sand\r\n            if (element == 2) {\r\n                color = vec4(0.76, 0.7, 0.5, 1);\r\n            }\r\n            \r\n            gl_FragColor = color;\r\n        }`,\r\n\r\n        vert: `\r\n        precision mediump float;\r\n        attribute vec2 position;\r\n        varying vec2 uv;\r\n        void main() {\r\n            uv = position;\r\n            gl_Position = vec4(position, 0, 1);\r\n        }`,\r\n\r\n        uniforms: {\r\n            data: () => {\r\n                ptr_pixels = map.pixels();\r\n                pixels = new Uint8Array(memory.buffer, ptr_pixels, size * size * 4);\r\n\r\n                return dataTexture({width: size, height: size, data: pixels});\r\n            },\r\n        },\r\n\r\n        attributes: {\r\n            position: [[-1, 4], [-1, -1], [4, -1]]\r\n        },\r\n\r\n        count: 3,\r\n    });\r\n\r\n    function drawChunk(props) {\r\n        return regl({\r\n            frag: `\r\n            precision mediump float;\r\n            uniform vec4 color;\r\n            void main () {\r\n              gl_FragColor = color;\r\n            }`,\r\n\r\n            vert: `\r\n            precision mediump float;\r\n            attribute vec2 position;\r\n            uniform float scale;\r\n            uniform vec2 offset;\r\n            void main () {\r\n              vec2 p  = position;\r\n              p *= scale;\r\n              p += offset;\r\n              gl_Position = vec4(p, 0, 1);\r\n            }`,\r\n\r\n            attributes: {\r\n                position: [[-1, -1], [1, -1], [1, 1], [-1, 1]],\r\n            },\r\n            uniforms: {\r\n                color: [0, 1, 0, 1],\r\n                scale: props.scale,\r\n                offset: props.offset,\r\n            },\r\n            count: 4,\r\n            lineWidth: 1,\r\n            primitive: 'line loop'\r\n        });\r\n    }\r\n    let chunkDrawCalls = [];\r\n\r\n    if (config.useChunks) {\r\n        let scale = config.chunkSize / map.size();\r\n\r\n        for (let i = 0; i < map.chunks_count(); i++) {\r\n            let chunk = map.chunk(i);\r\n\r\n            chunkDrawCalls.push(drawChunk({\r\n                scale: scale,\r\n                offset: [-1 + scale + 2*(chunk.x()/config.size), 1 - scale - 2*(chunk.y()/config.size)],\r\n            }));\r\n        }\r\n    }\r\n\r\n    let drawChunks = () => {\r\n        if (config.useChunks && showActiveChunks) {\r\n            for (let i = 0; i < chunkDrawCalls.length; i++) {\r\n                chunkDrawCalls[i]();\r\n            }\r\n        }\r\n    }\r\n\r\n    return () => {\r\n        regl.poll();\r\n        drawChunks();\r\n        drawMap();\r\n    };\r\n};\r\n\r\nexport { startWebGL};","import * as wasm from './engine_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const MapGenerator = Object.freeze({ EMPTY:0,\"0\":\"EMPTY\",CAVE:1,\"1\":\"CAVE\", });\n/**\n*/\nexport const Element = Object.freeze({ Empty:0,\"0\":\"Empty\",Wall:1,\"1\":\"Wall\",Sand:2,\"2\":\"Sand\", });\n/**\n*/\nexport class Chunk {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Chunk.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_chunk_free(ptr);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {Chunk}\n    */\n    static new(x, y) {\n        var ret = wasm.chunk_new(x, y);\n        return Chunk.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    x() {\n        var ret = wasm.__wbg_get_mapconfig_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    y() {\n        var ret = wasm.chunk_y(this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class Map {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Map.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_map_free(ptr);\n    }\n    /**\n    * @param {MapConfig} config\n    * @returns {Map}\n    */\n    static new_empty(config) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new_empty(ptr0);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {MapConfig} config\n    * @returns {Map}\n    */\n    static new_cave(config) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new_cave(ptr0);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {MapConfig} config\n    * @param {number} generator\n    * @returns {Map}\n    */\n    static new(config, generator) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new(ptr0, generator);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} element\n    * @param {number} radius\n    */\n    insert(x, y, element, radius) {\n        wasm.map_insert(this.ptr, x, y, element, radius);\n    }\n    /**\n    */\n    clear() {\n        wasm.map_clear(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    tick() {\n        var ret = wasm.map_tick(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    size() {\n        var ret = wasm.__wbg_get_mapconfig_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    generation() {\n        var ret = wasm.map_generation(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    pixels() {\n        var ret = wasm.map_pixels(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {Pixel}\n    */\n    pixel(x, y) {\n        var ret = wasm.map_pixel(this.ptr, x, y);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {PixelState}\n    */\n    pixel_state(x, y) {\n        var ret = wasm.map_pixel_state(this.ptr, x, y);\n        return PixelState.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {Chunk}\n    */\n    chunk(i) {\n        var ret = wasm.map_chunk(this.ptr, i);\n        return Chunk.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    chunks_count() {\n        var ret = wasm.map_chunks_count(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class MapConfig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MapConfig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mapconfig_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get size() {\n        var ret = wasm.__wbg_get_mapconfig_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set size(arg0) {\n        wasm.__wbg_set_mapconfig_size(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get gravity() {\n        var ret = wasm.__wbg_get_mapconfig_gravity(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gravity(arg0) {\n        wasm.__wbg_set_mapconfig_gravity(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get max_velocity() {\n        var ret = wasm.__wbg_get_mapconfig_max_velocity(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set max_velocity(arg0) {\n        wasm.__wbg_set_mapconfig_max_velocity(this.ptr, arg0);\n    }\n    /**\n    * @returns {boolean}\n    */\n    get use_chunks() {\n        var ret = wasm.__wbg_get_mapconfig_use_chunks(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {boolean} arg0\n    */\n    set use_chunks(arg0) {\n        wasm.__wbg_set_mapconfig_use_chunks(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get chunk_size() {\n        var ret = wasm.__wbg_get_mapconfig_chunk_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set chunk_size(arg0) {\n        wasm.__wbg_set_mapconfig_chunk_size(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get seed() {\n        var ret = wasm.__wbg_get_mapconfig_seed(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set seed(arg0) {\n        wasm.__wbg_set_mapconfig_seed(this.ptr, arg0);\n    }\n    /**\n    * @param {number} size\n    * @param {number} gravity\n    * @param {number} max_velocity\n    * @param {boolean} use_chunks\n    * @param {number} chunk_size\n    * @param {number} seed\n    * @returns {MapConfig}\n    */\n    static new(size, gravity, max_velocity, use_chunks, chunk_size, seed) {\n        var ret = wasm.mapconfig_new(size, gravity, max_velocity, use_chunks, chunk_size, seed);\n        return MapConfig.__wrap(ret);\n    }\n}\n/**\n*/\nexport class Pixel {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Pixel.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pixel_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {Pixel}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class PixelState {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PixelState.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pixelstate_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {PixelState}\n    */\n    static new(element) {\n        var ret = wasm.pixelstate_new(element);\n        return PixelState.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixelstate_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    velocity_y() {\n        var ret = wasm.__wbg_get_mapconfig_gravity(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {boolean}\n    */\n    clock_flag() {\n        var ret = wasm.pixelstate_clock_flag(this.ptr);\n        return ret !== 0;\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}