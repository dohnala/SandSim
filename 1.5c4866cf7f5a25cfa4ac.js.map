{"version":3,"sources":["webpack:///./render.js","webpack:///./vars.js","webpack:///./performance.js","webpack:///./ui.js","webpack:///./main.js","webpack:///../engine/pkg/engine_bg.js"],"names":["reglBuilder","require","elements","key","Element","Empty","value","name","color","Wall","Sand","mapGenerators","MapGenerator","EMPTY","CAVE","fpsLabel","document","getElementById","meanRenderTimeLabel","meanTickTimeLabel","lastTickTimeLabel","meanPixelsProcessedLabel","lastPixelsProcessedLabel","fps","mean","delta","frames","lastFrameTimeStamp","performance","now","measure","diff","this","push","length","shift","measureMean","renderTime","last","startTime","start","stop","window","paused","frameTime","tickTime","textContent","Math","round","pixelsProcessed","pixels","percentage","config","width","height","array","sum","i","max","setInterval","$","canvas","ready","addMapGenerators","addElements","updateCreateForm","click","clamp","val","gravity","max_velocity","generator","hasOwnProperty","mapGeneratorByName","createMap","option","append","playButton","pauseButton","nextFrameButton","resetButton","hide","addClass","togglePause","nextFrame","resetMap","keypress","event","keyCode","show","removeClass","nextTick","map","clear","selectedElement","radio","change","Number","attr","brushSize","step","min","brushSizeSlider","on","bind","originalEvent","wheelDelta","detail","inspectPixelPosition","inspecting","inspectRepeat","inspectCheckBox","inspectDetails","prop","clearInterval","inspectPixel","pixel","pixel_state","text","element","velocity_y","painting","lastPaint","repeat","addEventListener","preventDefault","paint","body","smoothPaint","getPixelPosition","findInspectPixelPosition","drawMap","pixelPosition","insert","startEvent","clientX","clientY","eventDistance","d","add","scale","norm","sub","boundingRect","getBoundingClientRect","scaleX","ceil","devicePixelRatio","scaleY","canvasLeft","left","canvasTop","top","floor","a","b","sqrt","pow","mag","magnitude","s","regl","ptr_pixels","dataTexture","Map","MapConfig","random","Uint8Array","memory","buffer","texture","data","frag","vert","uniforms","attributes","position","count","poll","tick","renderLoop","animationId","requestAnimationFrame","heap","Array","fill","undefined","getObject","idx","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","wasm","getStringFromWasm0","ptr","len","subarray","_assertClass","instance","klass","Error","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Object","freeze","__destroy_into_raw","x","y","radius","Pixel","__wrap","PixelState","obj","create","prototype","ptr0","arg0","seed","__wbg_new_59cb74e423758ede","addHeapObject","__wbg_stack_558ba5917b466edd","arg1","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"mYAAMA,EAAcC,EAAQ,ICEtBC,EAAW,CACb,CAACC,IAAKC,IAAQC,MAAOC,MAAO,CAACC,KAAM,QAASC,MAAO,wBACnD,CAACL,IAAKC,IAAQK,KAAMH,MAAO,CAACC,KAAM,OAAQC,MAAO,kBACjD,CAACL,IAAKC,IAAQM,KAAMJ,MAAO,CAACC,KAAM,OAAQC,MAAO,4BAE/CG,EAAgB,CAClB,CAACR,IAAKS,IAAaC,MAAOP,MAAO,CAACC,KAAM,UACxC,CAACJ,IAAKS,IAAaE,KAAMR,MAAO,CAACC,KAAM,UCLvCQ,EAAWC,SAASC,eAAe,OACnCC,EAAsBF,SAASC,eAAe,kBAC9CE,EAAoBH,SAASC,eAAe,gBAC5CG,EAAoBJ,SAASC,eAAe,gBAC5CI,EAA2BL,SAASC,eAAe,uBACnDK,EAA2BN,SAASC,eAAe,uBAEjDM,EAAM,CACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,GACRC,mBAAoBC,YAAYC,MAEhCC,QANQ,WAOJ,IAAMD,EAAMD,YAAYC,MAClBE,EAAOF,EAAMG,KAAKL,mBACxBK,KAAKL,mBAAqBE,EAC1B,IAAMN,EAAO,EAAIQ,EAAQ,IACzBC,KAAKP,MAAQM,EAAO,IAEpBC,KAAKN,OAAOO,KAAKV,GACbS,KAAKN,OAAOQ,OAvBC,KAwBbF,KAAKN,OAAOS,QAGhBH,KAAKR,KAAOY,EAAYJ,KAAKN,UAI/BW,EAAa,CACfb,KAAM,EACNc,KAAM,EACNZ,OAAQ,GACRa,UAAYX,YAAYC,MAExBW,MANe,WAOXR,KAAKO,UAAYX,YAAYC,OAGjCY,KAVe,WAWX,IAAIC,OAAOC,OAAX,CAEA,IACMC,EADMhB,YAAYC,MACAG,KAAKO,UAE7BP,KAAKM,KAAOM,EAEZZ,KAAKN,OAAOO,KAAKW,GACbZ,KAAKN,OAAOQ,OAlDC,KAmDbF,KAAKN,OAAOS,QAGhBH,KAAKR,KAAOY,EAAYJ,KAAKN,WAI/BmB,EAAW,CACbrB,KAAM,EACNc,KAAM,EACNZ,OAAQ,GACRa,UAAYX,YAAYC,MAExBW,MANa,WAOTR,KAAKO,UAAYX,YAAYC,OAGjCY,KAVa,WAWT,IACMG,EADMhB,YAAYC,MACAG,KAAKO,UAE7BP,KAAKM,KAAOM,EAEZxB,EAAkB0B,YAAcJ,OAAOC,OAAP,UAAmBI,KAAKC,MAAMhB,KAAKM,MAAnC,MAA+C,GAE/EN,KAAKN,OAAOO,KAAKW,GACbZ,KAAKN,OAAOQ,OA7EC,KA8EbF,KAAKN,OAAOS,QAGhBH,KAAKR,KAAOY,EAAYJ,KAAKN,UAI/BuB,EAAkB,CACpBzB,KAAM,EACNc,KAAM,EACNZ,OAAQ,GAERI,QALoB,SAKZoB,GACJlB,KAAKM,KAAOY,EAEZ5B,EAAyBwB,YAAcJ,OAAOC,OAAP,UAAmBI,KAAKC,MAAMhB,KAAKM,MAAnC,uBACpCa,EAAWnB,KAAKM,KAAMc,GAAOC,MAAMD,GAAOE,QADN,MACoB,GAE3DtB,KAAKN,OAAOO,KAAKiB,GACblB,KAAKN,OAAOQ,OAjGC,KAkGbF,KAAKN,OAAOS,QAGhBH,KAAKR,KAAOY,EAAYJ,KAAKN,UAI/BU,EAAc,SAAAmB,GAGhB,IAFA,IAAIC,EAAM,EAEDC,EAAI,EAAGA,EAAIF,EAAMrB,OAAQuB,IAC9BD,GAAOD,EAAME,GAGjB,OAAQD,EAAMD,EAAMrB,QAGlBiB,EAAa,SAAC7C,EAAOoD,GACvB,OAAOX,KAAKC,MAAO,IAAM1C,EAASoD,IAWtCC,aARqB,WACjB5C,EAAS+B,YAAT,eAA+BC,KAAKC,MAAMzB,EAAIC,OAC9CN,EAAoB4B,YAApB,UAAqCC,KAAKC,MAAMX,EAAWb,MAA3D,MACAL,EAAkB2B,YAAlB,UAAmCC,KAAKC,MAAMH,EAASrB,MAAvD,MACAH,EAAyByB,YAAzB,UAA0CC,KAAKC,MAAMC,EAAgBzB,MAArE,mBACG2B,EAAWJ,KAAKC,MAAMC,EAAgBzB,MAAO4B,GAAOC,MAAMD,GAAOE,QADpE,QAIsB,KC7H1B,IAAIM,EAAI3D,EAAS,IAEX4D,EAAS7C,SAASC,eAAe,UAEvC2C,EAAE,YAAYE,OAAM,WAChBC,IACAC,IACAC,OAOeL,EAAE,WAERM,OAAM,WACfd,GAAOC,MAAQc,GAAMP,EAAE,gBAAgBQ,MAAO,GAAI,KAClDhB,GAAOE,OAASa,GAAMP,EAAE,iBAAiBQ,MAAO,GAAI,KACpDhB,GAAOiB,QAAUF,GAAMP,EAAE,kBAAkBQ,OAAQ,EAAG,GACtDhB,GAAOkB,aAAeH,GAAMP,EAAE,sBAAsBQ,MAAO,EAAG,KAC9DhB,GAAOmB,UFdgB,SAAAhE,GACvB,IAAK,IAAIJ,KAAOQ,EACZ,GAAIA,EAAc6D,eAAerE,IACzBQ,EAAcR,GAAKG,MAAMC,OAASA,EAClC,OAAOJ,EAKnB,OAAO,KEKYsE,CAAmBb,EAAE,oBAAoBQ,OAE5DM,KACAT,OAGJ,IAAMA,EAAmB,WACrBL,EAAE,gBAAgBQ,IAAIhB,GAAOC,OAC7BO,EAAE,iBAAiBQ,IAAIhB,GAAOE,QAC9BM,EAAE,kBAAkBQ,IAAIhB,GAAOiB,SAC/BT,EAAE,sBAAsBQ,IAAIhB,GAAOkB,cACnCV,EAAE,oBAAoBQ,IAAIzD,EAAcyC,GAAOmB,WAAWjE,MAAMC,OAG9DwD,EAAmB,WACrB,IAAK,IAAI5D,KAAOQ,EACZ,GAAIA,EAAc6D,eAAerE,GAAM,CACnC,IAAIwE,EAAS,WAAH,OAAchE,EAAcR,GAAKG,MAAMC,KAAvC,aAEVqD,EAAE,oBAAoBgB,OAAOD,KAQrChC,GAAS,EACTkC,EAAajB,EAAE,SACfkB,EAAclB,EAAE,UAChBmB,EAAkBnB,EAAE,cACpBoB,EAAcpB,EAAE,UAEpBiB,EAAWI,OACXF,EAAgBG,SAAS,YAEzBL,EAAWX,OAAM,kBAAMiB,OACvBL,EAAYZ,OAAM,kBAAMiB,OACxBJ,EAAgBb,OAAM,kBAAMkB,OAC5BJ,EAAYd,OAAM,kBAAMmB,OAExBzB,EAAE,QAAQ0B,UAAS,SAAAC,GAEO,MAAlBA,EAAMC,QACNL,IAGuB,MAAlBI,EAAMC,QACXJ,IAGuB,MAAlBG,EAAMC,SACXH,OAIR,IAAMF,EAAc,WAChBxC,GAAUA,EACVD,OAAOC,OAASA,EAEZA,GACAkC,EAAWY,OACXX,EAAYG,OACZF,EAAgBW,YAAY,cAE5Bb,EAAWI,OACXH,EAAYW,OACZV,EAAgBG,SAAS,cAI3BE,EAAY,WACVzC,IACAE,EAASL,QACTS,EAAgBnB,QAAQ6D,MACxB9C,EAASJ,SAIX4C,EAAW,WACbO,EAAIC,SAMJC,EAAkB,KAEhB9B,EAAc,WAAM,eACb7D,GACL,GAAID,EAASsE,eAAerE,GAAM,CAC9B,IAAI4F,EAAQ,oJAAH,OAEkF5F,EAFlF,gFAG8CA,EAH9C,kFAIgDD,EAASC,GAAKG,MAAME,MAJpE,kDAKYN,EAASC,GAAKG,MAAMC,KALhC,kEASTqD,EAAE,aAAagB,OAAOmB,GACtBnC,EAAE,YAAczD,GAAU6F,QAAO,kBAAMF,EAAkBG,OAAO9F,QAZxE,IAAK,IAAIA,KAAOD,EAAU,EAAjBC,GAiBT2F,EAAkB,EAClBlC,EAAE,cAAcsC,KAAK,WAAW,IAMhCC,EAAY,CACZ7F,MAAO,EACP8F,KAAM,EACNC,IAAK,EACL3C,IAAK,GAGL4C,EAAkB1C,EAAE,cAExB0C,EAAgBC,GAAG,UAAU,WACzBJ,EAAU7F,MAAQ6D,GAAM8B,OAAOrC,EAAE5B,MAAMoC,OAAQ+B,EAAUE,IAAKF,EAAUzC,QAG5EE,EAAElB,QAAQ8D,KAAK,6BAA6B,SAASjB,GAC7CA,EAAMkB,cAAcC,WAAa,GAAKnB,EAAMkB,cAAcE,OAAS,GACnER,EAAU7F,MAAQ6D,GAAMgC,EAAU7F,MAAQ6F,EAAUC,KAAMD,EAAUE,IAAKF,EAAUzC,KACnF4C,EAAgBlC,IAAI+B,EAAU7F,SAE9B6F,EAAU7F,MAAQ6D,GAAMgC,EAAU7F,MAAQ6F,EAAUC,KAAMD,EAAUE,IAAKF,EAAUzC,KACnF4C,EAAgBlC,IAAI+B,EAAU7F,WAOtC,IAAIsG,EAAuB,KACvBC,GAAa,EACbC,EAAgB,KAChBC,EAAkBnD,EAAE,iBACpBoD,EAAiBpD,EAAE,mBAEvBoD,EAAe/B,OAEf8B,EAAgB7C,OAAM,WACd6C,EAAgBE,KAAK,YACrBJ,GAAa,EACbK,cAAcJ,GACdA,EAAgBpE,OAAOiB,aAAY,kBAAMwD,MAAgB,OAEzDN,GAAa,EACbK,cAAcJ,OAItB,IAQMK,EAAe,SAAA5B,GACjB,GAAIsB,GAAcD,EAAsB,CACpC,IAAIQ,EAAQxB,EAAIyB,YAAYT,EAAqB,GAAIA,EAAqB,IAEtEQ,IACAJ,EAAevB,OACf7B,EAAE,mBAAmB0D,KAAKpH,EAASkH,EAAMG,WAAWjH,MAAMC,MAC1DqD,EAAE,oBAAoB0D,KAAK,IAAMV,EAAqB,GAAK,KAAOA,EAAqB,GAAK,KAC5FhD,EAAE,oBAAoB0D,KAAK,OAASF,EAAMI,aAAe,WAG7DR,EAAe/B,QAOnBwC,GAAW,EACXC,EAAY,KACZC,EAAS,KAEb9D,EAAO+D,iBAAiB,aAAa,SAAArC,GACjCA,EAAMsC,iBACNJ,GAAW,EACXP,cAAcS,GACdA,EAASjF,OAAOiB,aAAY,kBAAMmE,EAAMvC,KAAQ,KAChDuC,EAAMvC,GACNmC,EAAYnC,KAGhBvE,SAAS+G,KAAKH,iBAAiB,WAAW,SAAArC,GACtC2B,cAAcS,GACVF,IACAlC,EAAMsC,iBACNH,EAAY,KACZD,GAAW,MAInB5D,EAAO+D,iBAAiB,aAAa,SAAArC,GACjC2B,cAAcS,GACdK,EAAYzC,GAlDiB,SAAAA,GAEzBqB,EADAG,EAAgBE,KAAK,WACEgB,EAAiB1C,GAEjB,KA+C3B2C,CAAyB3C,MAG7B1B,EAAO+D,iBAAiB,cAAc,SAAArC,GAClC2B,cAAcS,GACdD,EAAY,KACZd,EAAuB,QAG3B,ICtOIhB,EACAuC,EDqOEL,EAAQ,SAAAvC,GACV,GAAKkC,EAAL,CAIA,IAAIW,EAAgBH,EAAiB1C,GAErCK,EAAIyC,OAAOD,EAAc,GAAIA,EAAc,GAAItC,EAAiBK,EAAU7F,SAGxE0H,EAAc,SAAAzC,GAChB2B,cAAcS,GACdA,EAASjF,OAAOiB,aAAY,kBAAMmE,EAAMvC,KAAQ,KAEhD,IAAI+C,EAAa,CAAEC,QAAShD,EAAMgD,QAASC,QAASjD,EAAMiD,SAE1D,GAAKf,EAAL,CAIA,IAAIhE,EAAI,EAGR,GAFAqE,EAAMQ,GAEFZ,EACA,KAAOe,EAAcH,EAAYZ,GAAa,EAAI,GAAG,CACjD,IAAIgB,EAAID,EAAcH,EAAYZ,GAMlC,GALAY,EAAaK,EACTL,EACAM,GAAMC,EAAKC,EAAIpB,EAAWnC,IAASxC,KAAKsD,IAAI,EAAI,EAAGqC,OAEvDjF,EACQ,IACJ,MAEJqE,EAAMQ,GAGdZ,EAAYnC,IAOV0C,EAAmB,SAAA1C,GACrB,IAAMwD,EAAelF,EAAOmF,wBAEtBC,EAASpF,EAAOR,MAAQN,KAAKmG,KAAKxG,OAAOyG,kBAAoBJ,EAAa1F,MAC1E+F,EAASvF,EAAOP,OAASP,KAAKmG,KAAKxG,OAAOyG,kBAAoBJ,EAAazF,OAE3E+F,GAAc9D,EAAMgD,QAAUQ,EAAaO,MAAQL,EACnDM,GAAahE,EAAMiD,QAAUO,EAAaS,KAAOJ,EAKvD,MAAO,CAHGrG,KAAKW,IAAIX,KAAKsD,IAAItD,KAAK0G,MAAMJ,GAAajG,GAAOC,MAAQ,GAAI,GAC7DN,KAAKW,IAAIX,KAAKsD,IAAItD,KAAK0G,MAAMF,GAAYnG,GAAOE,OAAS,GAAI,KAKrEmF,EAAgB,SAACiB,EAAGC,GACtB,OAAO5G,KAAK6G,KACR7G,KAAK8G,IAAIH,EAAEnB,QAAUoB,EAAEpB,QAAS,GAAKxF,KAAK8G,IAAIH,EAAElB,QAAUmB,EAAEnB,QAAS,GACrE,IAIFG,EAAM,SAACe,EAAGC,GACZ,MAAO,CAAEpB,QAASmB,EAAEnB,QAAUoB,EAAEpB,QAASC,QAASkB,EAAElB,QAAUmB,EAAEnB,UAG9DM,EAAM,SAACY,EAAGC,GACZ,MAAO,CAAEpB,QAASmB,EAAEnB,QAAUoB,EAAEpB,QAASC,QAASkB,EAAElB,QAAUmB,EAAEnB,UAG9DK,EAAO,SAAAa,GACT,IAAII,EAAMC,GAAUL,GACpB,MAAO,CAAEnB,QAASmB,EAAEnB,QAAUuB,EAAKtB,QAASkB,EAAElB,QAAUsB,IAGtDlB,GAAQ,SAACc,EAAGM,GACd,MAAO,CAAEzB,QAASmB,EAAEnB,QAAUyB,EAAGxB,QAASkB,EAAElB,QAAUwB,IAGpDD,GAAY,SAAAL,GACd,OAAO3G,KAAK6G,KAAK7G,KAAK8G,IAAIH,EAAEnB,QAAS,GAAKxF,KAAK8G,IAAIH,EAAElB,QAAS,GAAI,IAGhErE,GAAQ,SAAS7D,EAAO+F,EAAK3C,GAC/B,OAAOX,KAAKsD,IAAItD,KAAKW,IAAIpD,EAAO+F,GAAM3C,ICtUtCN,GAAS,CACTC,MAAO,IACPC,OAAQ,IACRe,QAAS,GACTC,aAAc,EACdC,UAAW3D,IAAaC,OAMtBgD,GAAS7C,SAASC,eAAe,UAMjCyD,GAAY,WJnBD,IAAC,EAAEb,EAAQ+B,EAClBqE,EAIA5G,EACAC,EACF4G,EACAhH,EACEiH,EAEFhC,EISJvC,EAAMwE,IAAG,IAAKC,IAAS,IACnBjH,GAAOC,MACPD,GAAOE,OACPF,GAAOiB,QACPjB,GAAOkB,aARJvB,KAAK0G,MAAM1G,KAAKuH,SAAWvH,KAAK0G,MAAM,OASxBrG,GAAOmB,WAC5BV,GAAOR,MAAQD,GAAOC,MAAQN,KAAKmG,KAAKxG,OAAOyG,kBAC/CtF,GAAOP,OAASF,GAAOE,OAASP,KAAKmG,KAAKxG,OAAOyG,kBJ3BjCtF,GAAF,EI4BO,CAAEA,UAAQ+B,QJ5Bf/B,OAAQ+B,EAAU,EAAVA,IAClBqE,EAAOjK,EAAY,CACrB6D,WAGER,EAAQuC,EAAIvC,QACZC,EAASsC,EAAItC,SACf4G,EAAatE,EAAI1C,SACjBA,EAAS,IAAIqH,WAAWC,IAAOC,OAAQP,EAAY7G,EAAQC,EAAS,GAClE6G,EAAcF,EAAKS,QAAQ,CAAErH,QAAOC,SAAQqH,KAAMzH,IAEpDiF,EAAU8B,EAAK,CACfW,KAAM,2uBA2BNC,KAAM,gNASNC,SAAU,CACNH,KAAM,WAIF,OAHAT,EAAatE,EAAI1C,SACjBA,EAAS,IAAIqH,WAAWC,IAAOC,OAAQP,EAAY7G,EAAQC,EAAS,GAE7D6G,EAAY,CAAC9G,QAAOC,SAAQqH,KAAMzH,MAIjD6H,WAAY,CACRC,SAAU,CAAC,EAAE,EAAG,GAAI,EAAE,GAAI,GAAI,CAAC,GAAI,KAGvCC,MAAO,IIjCX9C,EJoCO,WACH8B,EAAKiB,OACL/C,MInCRzD,KAEA,IAgBMiB,GAAW,WACb,OAAOC,EAAIuF,KAAK5J,EAAIE,SAjBL,SAAb2J,IACF7J,EAAIO,UAECY,OAAOC,SACRE,EAASL,QACTS,EAAgBnB,QAAQ6D,MACxB9C,EAASJ,QAGbJ,EAAWG,QACX2F,IACA9F,EAAWI,OAEXC,OAAO2I,YAAcC,sBAAsBF,GAO/CA,I,uqBCtDA,IAAMG,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAIhC,SAASC,EAAUC,GAAO,OAAOL,EAAKK,GAFtCL,EAAKtJ,UAAKyJ,EAAW,MAAM,GAAM,GAIjC,IAAIG,EAAYN,EAAKrJ,OAQrB,SAAS4J,EAAWF,GAChB,IAAMG,EAAMJ,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVL,EAAKK,GAAOC,EACZA,EAAYD,GAKZI,CAAWJ,GACJG,EAGX,IAEIE,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIC,EAAOlM,SAAS,QAAQiM,YAAcA,aAE3D,QAAS,CAAEE,WAAW,EAAMC,OAAO,IAE5EJ,EAAkBK,SAElB,IAAIC,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqB9B,SAAWgC,IAAYhC,SAC7E8B,EAAuB,IAAIhC,WAAWkC,IAAYhC,SAE/C8B,EAGX,SAASG,EAAmBC,EAAKC,GAC7B,OAAOX,EAAkBK,OAAOE,IAAkBK,SAASF,EAAKA,EAAMC,IAG1E,SAASE,EAAaC,EAAUC,GAC5B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,MAAJ,+BAAkCD,EAAMzM,OAElD,OAAOwM,EAASJ,IAYpB,IAAIO,EAAkB,EAIlBC,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIjB,EAAOlM,SAAS,QAAQmN,YAAcA,aAE3D,SAEnCC,EAAwD,mBAAjCF,EAAkBG,WACzC,SAAUC,EAAKC,GACjB,OAAOL,EAAkBG,WAAWC,EAAKC,IAEvC,SAAUD,EAAKC,GACjB,IAAMC,EAAMN,EAAkBO,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACHG,KAAML,EAAIrL,OACV2L,QAASJ,EAAIvL,SA0CrB,IAAI4L,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBrD,SAAWgC,IAAYhC,SAC7EqD,EAAuB,IAAIE,WAAWvB,IAAYhC,SAE/CqD,EAIJ,IAAM1N,EAAU6N,OAAOC,OAAO,CAAE7N,MAAM,EAAE,EAAI,QAAQI,KAAK,EAAE,EAAI,OAAOC,KAAK,EAAE,EAAI,SAG3EE,EAAeqN,OAAOC,OAAO,CAAErN,MAAM,EAAE,EAAI,QAAQC,KAAK,EAAE,EAAI,SAG9DsJ,EAAb,8EASI,WACI,IAAMuC,EAAM3K,KAAK2K,IAGjB,OAFA3K,KAAK2K,IAAM,EAEJA,IAbf,kBAgBI,WACI,IAAMA,EAAM3K,KAAKmM,qBACjB1B,IAAoBE,KAlB5B,oBA4DI,SAAOyB,EAAGC,EAAG9G,EAAS+G,GAClB7B,IAAgBzK,KAAK2K,IAAKyB,EAAGC,EAAG9G,EAAS+G,KA7DjD,mBAiEI,WACI7B,IAAezK,KAAK2K,OAlE5B,kBAuEI,WAEI,OADUF,IAAczK,KAAK2K,OACd,IAzEvB,mBA8EI,WAEI,OADUF,IAA+BzK,KAAK2K,OA/EtD,oBAqFI,WAEI,OADUF,IAAgCzK,KAAK2K,OAtFvD,wBA4FI,WAEI,OADUF,IAAoBzK,KAAK2K,OA7F3C,oBAmGI,WAEI,OADUF,IAAgBzK,KAAK2K,OApGvC,mBA4GI,SAAMyB,EAAGC,GACL,IAAItC,EAAMU,IAAezK,KAAK2K,IAAKyB,EAAGC,GACtC,OAAOE,EAAMC,OAAOzC,KA9G5B,yBAqHI,SAAYqC,EAAGC,GACX,IAAItC,EAAMU,IAAqBzK,KAAK2K,IAAKyB,EAAGC,GAC5C,OAAOI,EAAWD,OAAOzC,MAvHjC,qBAEI,SAAcY,GACV,IAAM+B,EAAMT,OAAOU,OAAOvE,EAAIwE,WAG9B,OAFAF,EAAI/B,IAAMA,EAEH+B,IANf,uBAwBI,SAAiBtL,GACb0J,EAAa1J,EAAQiH,GACrB,IAAIwE,EAAOzL,EAAOuJ,IAClBvJ,EAAOuJ,IAAM,EACb,IAAIZ,EAAMU,IAAmBoC,GAC7B,OAAOzE,EAAIoE,OAAOzC,KA7B1B,sBAmCI,SAAgB3I,GACZ0J,EAAa1J,EAAQiH,GACrB,IAAIwE,EAAOzL,EAAOuJ,IAClBvJ,EAAOuJ,IAAM,EACb,IAAIZ,EAAMU,IAAkBoC,GAC5B,OAAOzE,EAAIoE,OAAOzC,KAxC1B,iBA+CI,SAAW3I,EAAQmB,GACfuI,EAAa1J,EAAQiH,GACrB,IAAIwE,EAAOzL,EAAOuJ,IAClBvJ,EAAOuJ,IAAM,EACb,IAAIZ,EAAMU,IAAaoC,EAAMtK,GAC7B,OAAO6F,EAAIoE,OAAOzC,OApD1B,KA4Ha1B,EAAb,8EASI,WACI,IAAMsC,EAAM3K,KAAK2K,IAGjB,OAFA3K,KAAK2K,IAAM,EAEJA,IAbf,kBAgBI,WACI,IAAMA,EAAM3K,KAAKmM,qBACjB1B,IAA0BE,KAlBlC,iBAuBI,WAEI,OADUF,IAA+BzK,KAAK2K,MAxBtD,IA8BI,SAAUmC,GACNrC,IAA+BzK,KAAK2K,IAAKmC,KA/BjD,kBAoCI,WAEI,OADUrC,IAAgCzK,KAAK2K,MArCvD,IA2CI,SAAWmC,GACPrC,IAAgCzK,KAAK2K,IAAKmC,KA5ClD,mBAiDI,WAEI,OADUrC,IAAiCzK,KAAK2K,MAlDxD,IAwDI,SAAYmC,GACRrC,IAAiCzK,KAAK2K,IAAKmC,KAzDnD,wBA8DI,WAEI,OADUrC,IAAsCzK,KAAK2K,MA/D7D,IAqEI,SAAiBmC,GACbrC,IAAsCzK,KAAK2K,IAAKmC,KAtExD,gBA2EI,WAEI,OADUrC,IAA8BzK,KAAK2K,MA5ErD,IAkFI,SAASmC,GACLrC,IAA8BzK,KAAK2K,IAAKmC,MAnFhD,qBAEI,SAAcnC,GACV,IAAM+B,EAAMT,OAAOU,OAAOtE,EAAUuE,WAGpC,OAFAF,EAAI/B,IAAMA,EAEH+B,IANf,iBA6FI,SAAWrL,EAAOC,EAAQe,EAASC,EAAcyK,GAC7C,IAAIhD,EAAMU,IAAmBpJ,EAAOC,EAAQe,EAASC,EAAcyK,GACnE,OAAO1E,EAAUmE,OAAOzC,OA/FhC,KAoGawC,EAAb,8EASI,WACI,IAAM5B,EAAM3K,KAAK2K,IAGjB,OAFA3K,KAAK2K,IAAM,EAEJA,IAbf,kBAgBI,WACI,IAAMA,EAAM3K,KAAKmM,qBACjB1B,IAAsBE,KAlB9B,qBA+BI,WAEI,OADUF,IAAmBzK,KAAK2K,OACnB,KAjCvB,qBAEI,SAAcA,GACV,IAAM+B,EAAMT,OAAOU,OAAOJ,EAAMK,WAGhC,OAFAF,EAAI/B,IAAMA,EAEH+B,IANf,iBAwBI,SAAWnH,GACP,IAAIwE,EAAMU,IAAelF,GACzB,OAAOgH,EAAMC,OAAOzC,OA1B5B,KAsCa0C,EAAb,8EASI,WACI,IAAM9B,EAAM3K,KAAK2K,IAGjB,OAFA3K,KAAK2K,IAAM,EAEJA,IAbf,kBAgBI,WACI,IAAMA,EAAM3K,KAAKmM,qBACjB1B,IAA2BE,KAlBnC,qBA+BI,WAEI,OADUF,IAAwBzK,KAAK2K,OACxB,IAjCvB,wBAsCI,WAEI,OADUF,IAA2BzK,KAAK2K,OAvClD,wBA6CI,WAEI,OAAe,IADLF,IAA2BzK,KAAK2K,QA9ClD,qBAEI,SAAcA,GACV,IAAM+B,EAAMT,OAAOU,OAAOF,EAAWG,WAGrC,OAFAF,EAAI/B,IAAMA,EAEH+B,IANf,iBAwBI,SAAWnH,GACP,IAAIwE,EAAMU,IAAoBlF,GAC9B,OAAOkH,EAAWD,OAAOzC,OA1BjC,KAmDaiD,EAA6B,WAEtC,OA5YJ,SAAuBN,GACf7C,IAAcN,EAAKrJ,QAAQqJ,EAAKtJ,KAAKsJ,EAAKrJ,OAAS,GACvD,IAAM0J,EAAMC,EAIZ,OAHAA,EAAYN,EAAKK,GAEjBL,EAAKK,GAAO8C,EACL9C,EAsYAqD,CADG,IAAIhC,QAILiC,EAA+B,SAASJ,EAAMK,GACvD,IACIN,EArXR,SAA2BtB,EAAK6B,EAAQC,GAEpC,QAAgB3D,IAAZ2D,EAAuB,CACvB,IAAM5B,EAAMN,EAAkBO,OAAOH,GAC/BZ,EAAMyC,EAAO3B,EAAIvL,QAGvB,OAFAsK,IAAkBK,SAASF,EAAKA,EAAMc,EAAIvL,QAAQyL,IAAIF,GACtDP,EAAkBO,EAAIvL,OACfyK,EAUX,IAPA,IAAIC,EAAMW,EAAIrL,OACVyK,EAAMyC,EAAOxC,GAEX0C,EAAM9C,IAER+C,EAAS,EAENA,EAAS3C,EAAK2C,IAAU,CAC3B,IAAMC,EAAOjC,EAAIkC,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAI3C,EAAM4C,GAAUC,EAGxB,GAAID,IAAW3C,EAAK,CACD,IAAX2C,IACAhC,EAAMA,EAAImC,MAAMH,IAEpB5C,EAAM0C,EAAQ1C,EAAKC,EAAKA,EAAM2C,EAAsB,EAAbhC,EAAIrL,QAC3C,IAAMsL,EAAOhB,IAAkBK,SAASF,EAAM4C,EAAQ5C,EAAMC,GAG5D2C,GAFYlC,EAAaE,EAAKC,GAEhBK,QAIlB,OADAX,EAAkBqC,EACX5C,EAkVIgD,CADDhE,EAAUwD,GAAMS,MACQnD,IAAwBA,KACtDoD,EAAO3C,EACXa,IAAkBe,EAAO,EAAI,GAAKe,EAClC9B,IAAkBe,EAAO,EAAI,GAAKD,GAGzBiB,EAA+B,SAAShB,EAAMK,GACvD,IACIY,QAAQC,MAAMtD,EAAmBoC,EAAMK,IAD3C,QAGI1C,IAAqBqC,EAAMK,KAItBc,EAA6B,SAASnB,GAC/ChD,EAAWgD,IAGFoB,EAAmB,SAASpB,EAAMK,GAC3C,MAAM,IAAIlC,MAAMP,EAAmBoC,EAAMK,O","file":"1.5c4866cf7f5a25cfa4ac.js","sourcesContent":["const reglBuilder = require(\"regl\");\r\nimport { memory } from \"./node_modules/engine/engine_bg\";\r\n\r\nlet startWebGL = ({ canvas, map }) => {\r\n    const regl = reglBuilder({\r\n        canvas\r\n    });\r\n\r\n    const width = map.width();\r\n    const height = map.height();\r\n    let ptr_pixels = map.pixels();\r\n    let pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n    const dataTexture = regl.texture({ width, height, data: pixels });\r\n\r\n    let drawMap = regl({\r\n        frag: `\r\n        precision highp float;\r\n        uniform sampler2D data;\r\n        varying vec2 uv;\r\n        void main() {\r\n            vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\r\n            vec4 data = texture2D(data, textCoord);\r\n            int element = int((data.r * 255.) + 0.1);\r\n            vec4 color;\r\n            \r\n            // empty\r\n            if (element == 0) {\r\n                color = vec4(255, 255, 255, 1);\r\n            }\r\n            \r\n            if (element == 1) {\r\n                color = vec4(0, 0, 0, 1);\r\n            }\r\n            \r\n            // sand\r\n            if (element == 2) {\r\n                color = vec4(0.76, 0.7, 0.5, 1);\r\n            }\r\n            \r\n            gl_FragColor = color;\r\n        }`,\r\n\r\n        vert: `\r\n        precision mediump float;\r\n        attribute vec2 position;\r\n        varying vec2 uv;\r\n        void main() {\r\n            uv = position;\r\n            gl_Position = vec4(position, 0, 1);\r\n        }`,\r\n\r\n        uniforms: {\r\n            data: () => {\r\n                ptr_pixels = map.pixels();\r\n                pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n\r\n                return dataTexture({width, height, data: pixels});\r\n            },\r\n        },\r\n\r\n        attributes: {\r\n            position: [[-1, 4], [-1, -1], [4, -1]]\r\n        },\r\n\r\n        count: 3,\r\n    });\r\n\r\n    return () => {\r\n        regl.poll();\r\n        drawMap();\r\n    };\r\n};\r\n\r\nexport { startWebGL};","import {Element, MapGenerator} from \"engine\";\r\n\r\nconst elements = [\r\n    {key: Element.Empty, value: {name: \"Empty\", color: \"rgba(255,255,255,1)\"}},\r\n    {key: Element.Wall, value: {name: \"Wall\", color: \"rgba(0,0,0,1)\"}},\r\n    {key: Element.Sand, value: {name: \"Sand\", color: \"rgba(194, 178, 127, 1)\"}}];\r\n\r\nconst mapGenerators = [\r\n    {key: MapGenerator.EMPTY, value: {name: \"Empty\"}},\r\n    {key: MapGenerator.CAVE, value: {name: \"Cave\"}},];\r\n\r\nconst mapGeneratorByName = name => {\r\n    for (let key in mapGenerators) {\r\n        if (mapGenerators.hasOwnProperty(key)) {\r\n            if (mapGenerators[key].value.name === name) {\r\n                return key;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport {elements, mapGenerators, mapGeneratorByName}","import {config} from \"./main\";\r\n\r\nconst MEAN_FRAMES_SIZE = 100;\r\n\r\nlet fpsLabel = document.getElementById(\"fps\");\r\nlet meanRenderTimeLabel = document.getElementById(\"meanRenderTime\");\r\nlet meanTickTimeLabel = document.getElementById(\"meanTickTime\");\r\nlet lastTickTimeLabel = document.getElementById(\"lastTickTime\");\r\nlet meanPixelsProcessedLabel = document.getElementById(\"meanPixelsProcessed\");\r\nlet lastPixelsProcessedLabel = document.getElementById(\"lastPixelsProcessed\");\r\n\r\nconst fps = {\r\n    mean: 0,\r\n    delta: 0,\r\n    frames: [],\r\n    lastFrameTimeStamp: performance.now(),\r\n\r\n    measure() {\r\n        const now = performance.now();\r\n        const diff = now - this.lastFrameTimeStamp;\r\n        this.lastFrameTimeStamp = now;\r\n        const fps = (1 / diff) * 1000;\r\n        this.delta = diff / 1000;\r\n\r\n        this.frames.push(fps);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst renderTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst tickTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        lastTickTimeLabel.textContent = window.paused ? `${Math.round(this.last)}ms` : \"\";\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst pixelsProcessed = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n\r\n    measure(pixels) {\r\n        this.last = pixels;\r\n\r\n        lastPixelsProcessedLabel.textContent = window.paused ? `${Math.round(this.last)} \r\n        (${percentage(this.last, config.width*config.height)}%)` : \"\";\r\n\r\n        this.frames.push(pixels);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst measureMean = array => {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        sum += array[i];\r\n    }\r\n\r\n    return  sum / array.length;\r\n}\r\n\r\nconst percentage = (value, max) => {\r\n    return Math.round((100 * value) / max);\r\n}\r\n\r\nconst updateLabels = () => {\r\n    fpsLabel.textContent = `FPS: ${Math.round(fps.mean)}`;\r\n    meanRenderTimeLabel.textContent = `${Math.round(renderTime.mean)}ms`;\r\n    meanTickTimeLabel.textContent = `${Math.round(tickTime.mean)}ms`;\r\n    meanPixelsProcessedLabel.textContent = `${Math.round(pixelsProcessed.mean)} \r\n    (${percentage(Math.round(pixelsProcessed.mean), config.width*config.height)}%)`;\r\n}\r\n\r\nsetInterval(updateLabels, 100);\r\n\r\nexport { fps, renderTime, tickTime, pixelsProcessed};","import {config, createMap, map, nextTick} from \"./main.js\";\r\nimport {elements, mapGenerators, mapGeneratorByName} from \"./vars\";\r\nimport {pixelsProcessed, tickTime} from \"./performance\";\r\n\r\nvar $ = require( \"jquery\" );\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\n$('document').ready(function(){\r\n    addMapGenerators();\r\n    addElements();\r\n    updateCreateForm()\r\n\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  CREATE MAP\r\n// -----------------------------------------------------------------------------------------------\r\nlet createButton = $('#create');\r\n\r\ncreateButton.click(() => {\r\n    config.width = clamp($('#configWidth').val(), 64, 512);\r\n    config.height = clamp($('#configHeight').val(), 64, 512);\r\n    config.gravity = clamp($('#configGravity').val(), -1, 1);\r\n    config.max_velocity = clamp($('#configMaxVelocity').val(), 0, 100);\r\n    config.generator = mapGeneratorByName($('#configGenerator').val());\r\n\r\n    createMap()\r\n    updateCreateForm();\r\n});\r\n\r\nconst updateCreateForm = () => {\r\n    $('#configWidth').val(config.width);\r\n    $('#configHeight').val(config.height);\r\n    $('#configGravity').val(config.gravity);\r\n    $('#configMaxVelocity').val(config.max_velocity);\r\n    $('#configGenerator').val(mapGenerators[config.generator].value.name);\r\n}\r\n\r\nconst addMapGenerators = () => {\r\n    for (let key in mapGenerators) {\r\n        if (mapGenerators.hasOwnProperty(key)) {\r\n            let option = `<option>${mapGenerators[key].value.name}</option>`;\r\n\r\n            $('#configGenerator').append(option);\r\n        }\r\n    }\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  ACTIONS\r\n// -----------------------------------------------------------------------------------------------\r\nlet paused = false;\r\nlet playButton = $('#play');\r\nlet pauseButton = $('#pause');\r\nlet nextFrameButton = $('#nextFrame');\r\nlet resetButton = $('#reset');\r\n\r\nplayButton.hide();\r\nnextFrameButton.addClass(\"disabled\");\r\n\r\nplayButton.click(() => togglePause());\r\npauseButton.click(() => togglePause());\r\nnextFrameButton.click(() => nextFrame());\r\nresetButton.click(() => resetMap());\r\n\r\n$('body').keypress(event => {\r\n    // P\r\n    if (event.keyCode === 112) {\r\n        togglePause();\r\n    }\r\n    // F\r\n    else if (event.keyCode === 102) {\r\n        nextFrame();\r\n    }\r\n    // R\r\n    else if (event.keyCode === 114) {\r\n        resetMap();\r\n    }\r\n})\r\n\r\nconst togglePause = () => {\r\n    paused = !paused;\r\n    window.paused = paused;\r\n\r\n    if (paused) {\r\n        playButton.show();\r\n        pauseButton.hide();\r\n        nextFrameButton.removeClass(\"disabled\");\r\n    } else {\r\n        playButton.hide();\r\n        pauseButton.show();\r\n        nextFrameButton.addClass(\"disabled\");\r\n    }\r\n}\r\n\r\nconst nextFrame = () => {\r\n    if (paused) {\r\n        tickTime.start();\r\n        pixelsProcessed.measure(nextTick());\r\n        tickTime.stop();\r\n    }\r\n}\r\n\r\nconst resetMap = () => {\r\n    map.clear();\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  ELEMENTS\r\n// -----------------------------------------------------------------------------------------------\r\nlet selectedElement = null;\r\n\r\nconst addElements = () => {\r\n    for (let key in elements) {\r\n        if (elements.hasOwnProperty(key)) {\r\n            let radio = `\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"element_${key}\">\r\n                    <label class=\"form-check-label\" for=\"element_${key}\">\r\n                        <i class=\"bi bi-square-fill\" style=\"color: ${elements[key].value.color}\"></i>\r\n                        <label>${elements[key].value.name}</label>\r\n                    </label>\r\n                </div>`;\r\n\r\n            $('#painting').append(radio);\r\n            $('#element_' + key + '').change(() => selectedElement = Number(key));\r\n        }\r\n    }\r\n\r\n    // Select Sand by default\r\n    selectedElement = 2;\r\n    $('#element_2').attr('checked', true)\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  BRUSH SETTINGS\r\n// -----------------------------------------------------------------------------------------------\r\nlet brushSize = {\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 5\r\n}\r\n\r\nlet brushSizeSlider = $('#brushSize');\r\n\r\nbrushSizeSlider.on(\"change\", function () {\r\n    brushSize.value = clamp(Number($(this).val()), brushSize.min, brushSize.max);\r\n});\r\n\r\n$(window).bind('mousewheel DOMMouseScroll', function(event){\r\n    if (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0) {\r\n        brushSize.value = clamp(brushSize.value + brushSize.step, brushSize.min, brushSize.max);\r\n        brushSizeSlider.val(brushSize.value);\r\n    } else {\r\n        brushSize.value = clamp(brushSize.value - brushSize.step, brushSize.min, brushSize.max);\r\n        brushSizeSlider.val(brushSize.value);\r\n    }\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  PIXEL INSPECTION\r\n// -----------------------------------------------------------------------------------------------\r\nlet inspectPixelPosition = null;\r\nlet inspecting = false;\r\nlet inspectRepeat = null;\r\nlet inspectCheckBox = $('#inspectCheck');\r\nlet inspectDetails = $('#inspectDetails');\r\n\r\ninspectDetails.hide();\r\n\r\ninspectCheckBox.click(() => {\r\n    if (inspectCheckBox.prop('checked')) {\r\n        inspecting = true;\r\n        clearInterval(inspectRepeat);\r\n        inspectRepeat = window.setInterval(() => inspectPixel(), 100);\r\n    } else {\r\n        inspecting = false;\r\n        clearInterval(inspectRepeat);\r\n    }\r\n})\r\n\r\nconst findInspectPixelPosition = event => {\r\n    if (inspectCheckBox.prop('checked')) {\r\n        inspectPixelPosition = getPixelPosition(event);\r\n    } else {\r\n        inspectPixelPosition = null;\r\n    }\r\n}\r\n\r\nconst inspectPixel = event => {\r\n    if (inspecting && inspectPixelPosition) {\r\n        let pixel = map.pixel_state(inspectPixelPosition[0], inspectPixelPosition[1])\r\n\r\n        if (pixel) {\r\n            inspectDetails.show();\r\n            $('#inspectElement').text(elements[pixel.element()].value.name);\r\n            $('#inspectPosition').text(\"(\" + inspectPixelPosition[0] + \", \" + inspectPixelPosition[1] + \")\");\r\n            $('#inspectVelocity').text(\"(0, \" + pixel.velocity_y() + \")\");\r\n        }\r\n    } else {\r\n        inspectDetails.hide();\r\n    }\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  PAINTING\r\n// -----------------------------------------------------------------------------------------------\r\nlet painting = false;\r\nlet lastPaint = null;\r\nlet repeat = null;\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\n    event.preventDefault();\r\n    painting = true;\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n    paint(event);\r\n    lastPaint = event;\r\n});\r\n\r\ndocument.body.addEventListener(\"mouseup\", event => {\r\n    clearInterval(repeat);\r\n    if (painting) {\r\n        event.preventDefault();\r\n        lastPaint = null;\r\n        painting = false;\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", event => {\r\n    clearInterval(repeat);\r\n    smoothPaint(event);\r\n    findInspectPixelPosition(event);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseleave\", event => {\r\n    clearInterval(repeat);\r\n    lastPaint = null;\r\n    inspectPixelPosition = null;\r\n});\r\n\r\nconst paint = event => {\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let pixelPosition = getPixelPosition(event);\r\n\r\n    map.insert(pixelPosition[0], pixelPosition[1], selectedElement, brushSize.value);\r\n};\r\n\r\nconst smoothPaint = event => {\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n\r\n    let startEvent = { clientX: event.clientX, clientY: event.clientY };\r\n\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    paint(startEvent);\r\n\r\n    if (lastPaint) {\r\n        while (eventDistance(startEvent, lastPaint) > 1 / 3) {\r\n            let d = eventDistance(startEvent, lastPaint);\r\n            startEvent = add(\r\n                startEvent,\r\n                scale(norm(sub(lastPaint, event)), Math.min(1 / 3, d))\r\n            );\r\n            i++;\r\n            if (i > 1000) {\r\n                break;\r\n            }\r\n            paint(startEvent);\r\n        }\r\n    }\r\n    lastPaint = event;\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  UTILS\r\n// -----------------------------------------------------------------------------------------------\r\n\r\nconst getPixelPosition = event => {\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const scaleX = canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width;\r\n    const scaleY = canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height;\r\n\r\n    const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n    const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n    const x = Math.max(Math.min(Math.floor(canvasLeft), config.width - 1), 0);\r\n    const y = Math.max(Math.min(Math.floor(canvasTop), config.height - 1), 0);\r\n\r\n    return [x, y];\r\n}\r\n\r\nconst eventDistance = (a, b) => {\r\n    return Math.sqrt(\r\n        Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\r\n        2\r\n    );\r\n};\r\n\r\nconst add = (a, b) => {\r\n    return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\r\n};\r\n\r\nconst sub = (a, b) => {\r\n    return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\r\n};\r\n\r\nconst norm = a => {\r\n    let mag = magnitude(a);\r\n    return { clientX: a.clientX / mag, clientY: a.clientY / mag };\r\n};\r\n\r\nconst scale = (a, s) => {\r\n    return { clientX: a.clientX * s, clientY: a.clientY * s };\r\n};\r\n\r\nconst magnitude = a => {\r\n    return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\r\n};\r\n\r\nconst clamp = function(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};","import {Map, MapConfig, MapGenerator} from \"./node_modules/engine/engine.js\";\r\nimport { startWebGL } from \"./render\";\r\nimport {} from \"./ui\";\r\nimport {fps, pixelsProcessed, renderTime, tickTime} from \"./performance\";\r\n\r\nlet config = {\r\n    width: 128,\r\n    height: 128,\r\n    gravity: 0.2,\r\n    max_velocity: 5,\r\n    generator: MapGenerator.EMPTY,\r\n}\r\n\r\nlet map;\r\nlet drawMap;\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\nconst generateSeed = () => {\r\n    return Math.floor(Math.random() * Math.floor(10000));\r\n}\r\n\r\nconst createMap = () => {\r\n    map = Map.new(MapConfig.new(\r\n        config.width,\r\n        config.height,\r\n        config.gravity,\r\n        config.max_velocity,\r\n        generateSeed()), config.generator);\r\n    canvas.width = config.width * Math.ceil(window.devicePixelRatio);\r\n    canvas.height = config.height * Math.ceil(window.devicePixelRatio);\r\n    drawMap = startWebGL({ canvas, map });\r\n}\r\n\r\ncreateMap();\r\n\r\nconst renderLoop = () => {\r\n    fps.measure();\r\n\r\n    if (!window.paused) {\r\n        tickTime.start();\r\n        pixelsProcessed.measure(nextTick());\r\n        tickTime.stop();\r\n    }\r\n\r\n    renderTime.start();\r\n    drawMap();\r\n    renderTime.stop();\r\n\r\n    window.animationId = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nconst nextTick = () => {\r\n    return map.tick(fps.delta);\r\n}\r\n\r\nrenderLoop();\r\n\r\nexport { canvas, config, map, createMap, nextTick};","import * as wasm from './engine_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const Element = Object.freeze({ Empty:0,\"0\":\"Empty\",Wall:1,\"1\":\"Wall\",Sand:2,\"2\":\"Sand\", });\n/**\n*/\nexport const MapGenerator = Object.freeze({ EMPTY:0,\"0\":\"EMPTY\",CAVE:1,\"1\":\"CAVE\", });\n/**\n*/\nexport class Map {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Map.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_map_free(ptr);\n    }\n    /**\n    * @param {MapConfig} config\n    * @returns {Map}\n    */\n    static new_empty(config) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new_empty(ptr0);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {MapConfig} config\n    * @returns {Map}\n    */\n    static new_cave(config) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new_cave(ptr0);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {MapConfig} config\n    * @param {number} generator\n    * @returns {Map}\n    */\n    static new(config, generator) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new(ptr0, generator);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} element\n    * @param {number} radius\n    */\n    insert(x, y, element, radius) {\n        wasm.map_insert(this.ptr, x, y, element, radius);\n    }\n    /**\n    */\n    clear() {\n        wasm.map_clear(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    tick() {\n        var ret = wasm.map_tick(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.__wbg_get_mapconfig_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.__wbg_get_mapconfig_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    generation() {\n        var ret = wasm.map_generation(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    pixels() {\n        var ret = wasm.map_pixels(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {Pixel}\n    */\n    pixel(x, y) {\n        var ret = wasm.map_pixel(this.ptr, x, y);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {PixelState}\n    */\n    pixel_state(x, y) {\n        var ret = wasm.map_pixel_state(this.ptr, x, y);\n        return PixelState.__wrap(ret);\n    }\n}\n/**\n*/\nexport class MapConfig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MapConfig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mapconfig_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get width() {\n        var ret = wasm.__wbg_get_mapconfig_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set width(arg0) {\n        wasm.__wbg_set_mapconfig_width(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get height() {\n        var ret = wasm.__wbg_get_mapconfig_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set height(arg0) {\n        wasm.__wbg_set_mapconfig_height(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get gravity() {\n        var ret = wasm.__wbg_get_mapconfig_gravity(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gravity(arg0) {\n        wasm.__wbg_set_mapconfig_gravity(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get max_velocity() {\n        var ret = wasm.__wbg_get_mapconfig_max_velocity(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set max_velocity(arg0) {\n        wasm.__wbg_set_mapconfig_max_velocity(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get seed() {\n        var ret = wasm.__wbg_get_mapconfig_seed(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set seed(arg0) {\n        wasm.__wbg_set_mapconfig_seed(this.ptr, arg0);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @param {number} gravity\n    * @param {number} max_velocity\n    * @param {number} seed\n    * @returns {MapConfig}\n    */\n    static new(width, height, gravity, max_velocity, seed) {\n        var ret = wasm.mapconfig_new(width, height, gravity, max_velocity, seed);\n        return MapConfig.__wrap(ret);\n    }\n}\n/**\n*/\nexport class Pixel {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Pixel.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pixel_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {Pixel}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class PixelState {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PixelState.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pixelstate_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {PixelState}\n    */\n    static new(element) {\n        var ret = wasm.pixelstate_new(element);\n        return PixelState.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixelstate_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    velocity_y() {\n        var ret = wasm.pixelstate_velocity_y(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {boolean}\n    */\n    clock_flag() {\n        var ret = wasm.pixelstate_clock_flag(this.ptr);\n        return ret !== 0;\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}