(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[,,,,,,,,,function(e,n,t){"use strict";(function(e){t.d(n,"d",(function(){return z})),t.d(n,"a",(function(){return C})),t.d(n,"b",(function(){return E})),t.d(n,"c",(function(){return S})),t.d(n,"f",(function(){return P})),t.d(n,"g",(function(){return T})),t.d(n,"e",(function(){return D})),t.d(n,"h",(function(){return Y})),t.d(n,"i",(function(){return A}));var r=t(10);function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,n,t){return n&&o(e.prototype,n),t&&o(e,t),e}var c=new Array(32).fill(void 0);function u(e){return c[e]}c.push(void 0,null,!0,!1);var s=c.length;function l(e){var n=u(e);return function(e){e<36||(c[e]=s,s=e)}(e),n}var f=new("undefined"==typeof TextDecoder?(0,e.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});f.decode();var v=null;function p(){return null!==v&&v.buffer===r.ib.buffer||(v=new Uint8Array(r.ib.buffer)),v}function h(e,n){return f.decode(p().subarray(e,e+n))}function d(e,n){if(!(e instanceof n))throw new Error("expected instance of ".concat(n.name));return e.ptr}var m=null;function y(){return null!==m&&m.buffer===r.ib.buffer||(m=new Int32Array(r.ib.buffer)),m}var x=null;function w(){return null!==x&&x.buffer===r.ib.buffer||(x=new Float32Array(r.ib.buffer)),x}function _(e){return null==e}var g=0,k=new("undefined"==typeof TextEncoder?(0,e.require)("util").TextEncoder:TextEncoder)("utf-8"),b="function"==typeof k.encodeInto?function(e,n){return k.encodeInto(e,n)}:function(e,n){var t=k.encode(e);return n.set(t),{read:e.length,written:t.length}};var z=Object.freeze({EMPTY:0,0:"EMPTY",CAVE:1,1:"CAVE"}),C=Object.freeze({Empty:0,0:"Empty",Wall:1,1:"Wall",Sand:2,2:"Sand",Dirt:3,3:"Dirt",Water:4,4:"Water"}),M=function(){function e(){i(this,e)}return a(e,[{key:"__destroy_into_raw",value:function(){var e=this.ptr;return this.ptr=0,e}},{key:"free",value:function(){var e=this.__destroy_into_raw();r.a(e)}},{key:"x",value:function(){return r.f(this.ptr)}},{key:"y",value:function(){return r.V(this.ptr)}},{key:"active",value:function(){return 0!==r.T(this.ptr)}},{key:"active_next_tick",value:function(){return 0!==r.U(this.ptr)}}],[{key:"__wrap",value:function(n){var t=Object.create(e.prototype);return t.ptr=n,t}}]),e}(),E=function(){function e(){i(this,e)}return a(e,[{key:"__destroy_into_raw",value:function(){var e=this.ptr;return this.ptr=0,e}},{key:"free",value:function(){var e=this.__destroy_into_raw();r.t(e)}},{key:"insert",value:function(e,n,t,i){r.bb(this.ptr,e,n,t,i)}},{key:"clear",value:function(){r.Y(this.ptr)}},{key:"tick",value:function(){return r.gb(this.ptr)>>>0}},{key:"config",value:function(){var e=r.Z(this.ptr);return S.__wrap(e)}},{key:"display",value:function(){return r.ab(this.ptr)}},{key:"pixel_info",value:function(e,n){var t=r.fb(this.ptr,e,n);return 0===t?void 0:I.__wrap(t)}},{key:"chunks_count",value:function(){return r.X(this.ptr)>>>0}},{key:"chunk",value:function(e){var n=r.W(this.ptr,e);return M.__wrap(n)}}],[{key:"__wrap",value:function(n){var t=Object.create(e.prototype);return t.ptr=n,t}},{key:"new_empty",value:function(n){d(n,S);var t=n.ptr;n.ptr=0;var i=r.eb(t);return e.__wrap(i)}},{key:"new_cave",value:function(n){d(n,S);var t=n.ptr;n.ptr=0;var i=r.db(t);return e.__wrap(i)}},{key:"new",value:function(n,t){d(n,S);var i=n.ptr;n.ptr=0;var o=r.cb(i,t);return e.__wrap(o)}}]),e}(),S=function(){function e(){i(this,e)}return a(e,[{key:"__destroy_into_raw",value:function(){var e=this.ptr;return this.ptr=0,e}},{key:"free",value:function(){var e=this.__destroy_into_raw();r.u(e)}},{key:"size",get:function(){return r.f(this.ptr)},set:function(e){r.B(this.ptr,e)}},{key:"gravity",get:function(){return r.c(this.ptr)},set:function(e){r.y(this.ptr,e)}},{key:"max_velocity",get:function(){return r.d(this.ptr)},set:function(e){r.z(this.ptr,e)}},{key:"use_chunks",get:function(){return 0!==r.g(this.ptr)},set:function(e){r.C(this.ptr,e)}},{key:"chunk_size",get:function(){return r.b(this.ptr)},set:function(e){r.x(this.ptr,e)}},{key:"seed",get:function(){return r.e(this.ptr)},set:function(e){r.A(this.ptr,e)}}],[{key:"__wrap",value:function(n){var t=Object.create(e.prototype);return t.ptr=n,t}},{key:"new",value:function(n,t,i,o,a,c){var u=r.hb(n,t,i,o,a,c);return e.__wrap(u)}}]),e}(),I=function(){function e(){i(this,e)}return a(e,[{key:"__destroy_into_raw",value:function(){var e=this.ptr;return this.ptr=0,e}},{key:"free",value:function(){var e=this.__destroy_into_raw();r.w(e)}},{key:"element",get:function(){return r.l(this.ptr)>>>0},set:function(e){r.H(this.ptr,e)}},{key:"friction",get:function(){try{var e=r.P(-16);r.n(e,this.ptr);var n=y()[e/4+0],t=w()[e/4+1];return 0===n?void 0:t}finally{r.P(16)}},set:function(e){r.J(this.ptr,!_(e),_(e)?0:e)}},{key:"restitution",get:function(){try{var e=r.P(-16);r.q(e,this.ptr);var n=y()[e/4+0],t=w()[e/4+1];return 0===n?void 0:t}finally{r.P(16)}},set:function(e){r.M(this.ptr,!_(e),_(e)?0:e)}},{key:"inertia",get:function(){try{var e=r.P(-16);r.o(e,this.ptr);var n=y()[e/4+0],t=w()[e/4+1];return 0===n?void 0:t}finally{r.P(16)}},set:function(e){r.K(this.ptr,!_(e),_(e)?0:e)}},{key:"velocity_x",get:function(){try{var e=r.P(-16);r.r(e,this.ptr);var n=y()[e/4+0],t=w()[e/4+1];return 0===n?void 0:t}finally{r.P(16)}},set:function(e){r.N(this.ptr,!_(e),_(e)?0:e)}},{key:"velocity_y",get:function(){try{var e=r.P(-16);r.s(e,this.ptr);var n=y()[e/4+0],t=w()[e/4+1];return 0===n?void 0:t}finally{r.P(16)}},set:function(e){r.O(this.ptr,!_(e),_(e)?0:e)}},{key:"falling",get:function(){var e=r.m(this.ptr);return 16777215===e?void 0:0!==e},set:function(e){r.I(this.ptr,_(e)?16777215:e?1:0)}},{key:"not_moved_count",get:function(){var e=r.p(this.ptr);return 16777215===e?void 0:e},set:function(e){r.L(this.ptr,_(e)?16777215:e)}}],[{key:"__wrap",value:function(n){var t=Object.create(e.prototype);return t.ptr=n,t}}]),e}(),P=function(){return function(e){s===c.length&&c.push(c.length+1);var n=s;return s=c[n],c[n]=e,n}(new Error)},T=function(e,n){var t=function(e,n,t){if(void 0===t){var r=k.encode(e),i=n(r.length);return p().subarray(i,i+r.length).set(r),g=r.length,i}for(var o=e.length,a=n(o),c=p(),u=0;u<o;u++){var s=e.charCodeAt(u);if(s>127)break;c[a+u]=s}if(u!==o){0!==u&&(e=e.slice(u)),a=t(a,o,o=u+3*e.length);var l=p().subarray(a+u,a+o);u+=b(e,l).written}return g=u,a}(u(n).stack,r.R,r.S),i=g;y()[e/4+1]=i,y()[e/4+0]=t},D=function(e,n){try{console.error(h(e,n))}finally{r.Q(e,n)}},Y=function(e){l(e)},A=function(e,n){throw new Error(h(e,n))}}).call(this,t(12)(e))},function(e,n,t){"use strict";var r=t.w[e.i];e.exports=r;t(9);r.jb()},,,,,function(e,n){e.exports="precision mediump float;\n#define GLSLIFY 1\nattribute vec2 position;\nvarying vec2 uv;\n\nvoid main() {\n    uv = position;\n    gl_Position = vec4(position, 0, 1);\n}"},function(e,n){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform vec2 element_texture_dim;\nuniform sampler2D element_texture;\nuniform int map_size;\nuniform sampler2D map_texture;\n\nvarying vec2 uv;\n\n// clang-format off\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g_0 = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g_0;\n  vec3 i1 = min( g_0.xyz, l.zxy );\n  vec3 i2 = max( g_0.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvoid main() {\n    vec2 map_texture_coord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\n\n    // Pixel info contains information about how pixel should be rendered\n    // pixel_info.r = element\n    // pixel_infor.g = noise (only for solid elements)\n    vec4 pixel_info = texture2D(map_texture, map_texture_coord);\n\n    // In order to get element, it need to be converted from float\n    int element = int((pixel_info.r * 255.) + 0.1);\n\n    // Coordinate to load texture data for element\n    float element_texture_coord = float(element)/float(element_texture_dim[1]);\n    // Coordinate to load color for element\n    float element_color_coord = 0.;\n    // Coordinate to load params for element\n    float element_params_coord = float(1)/float(element_texture_dim[0]);\n\n    // Element Color is in HSV + A format\n    // color.x = Hue\n    // color.y = Saturation\n    // color.z = Value\n    // color.a = Alpha\n    vec4 color = texture2D(element_texture, vec2(element_color_coord, element_texture_coord));\n\n    // Element Parameters\n    // params.x = Value modifier in range [0..1] - how much random value should be added to element Value\n    // params.y = Noise speed - how frequently should be color of element changed\n    // paramy.z = Noise Value modifier in range [0..1] - how much noise value should be added to element Value\n    vec4 params = texture2D(element_texture, vec2(element_params_coord, element_texture_coord));\n\n    // Create noise from UV coordinates which changes based on element noise speed\n    float noise = snoise(vec3(floor(uv * float(map_size)), time * params.y));\n\n    // Change element's Value according to value modifier and noise value modifier\n    float value = color.z + pixel_info.g * params.x + noise * params.z;\n\n    color = vec4(color.x, color.y, value, color.w);\n\n    // Convert the color to RGBA\n    gl_FragColor = vec4(hsv2rgb(vec3(color.xyz)), color.w);\n}"},function(e,n){e.exports="precision mediump float;\n#define GLSLIFY 1\nattribute vec2 position;\nuniform float scale;\nuniform vec2 offset;\n\nvoid main () {\n    vec2 p  = position;\n    p *= scale;\n    p += offset;\n    gl_Position = vec4(p, 0, 1);\n}"},function(e,n){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform vec4 color;\n\nvoid main () {\n    gl_FragColor = color;\n}"},function(e,n,t){"use strict";t.r(n),t.d(n,"canvas",(function(){return ke})),t.d(n,"config",(function(){return ge})),t.d(n,"map",(function(){return ne})),t.d(n,"createMap",(function(){return be})),t.d(n,"nextTick",(function(){return ze})),t.d(n,"generateSeed",(function(){return _e}));var r=t(9),i=[{key:r.a.Empty,value:{name:"Empty",hsv:[0,0,1],alpha:1,params:[0,0,0,0]}},{key:r.a.Wall,value:{name:"Wall",hsv:[0,0,0],alpha:1,params:[0,0,0,0]}},{key:r.a.Sand,value:{name:"Sand",hsv:[46,.5,.5],alpha:1,params:[.2,0,0,0]}},{key:r.a.Dirt,value:{name:"Dirt",hsv:[18,.6,.3],alpha:1,params:[.1,0,0,0]}},{key:r.a.Water,value:{name:"Water",hsv:[222,.7,.5],alpha:.5,params:[.1,.025,.1,0]}}],o=[64,128,256,512],a=[16,32,64],c=[{key:r.d.EMPTY,value:{name:"Empty"}},{key:r.d.CAVE,value:{name:"Cave"}}],u=function(){var e=[];for(var n in i)i.hasOwnProperty(n)&&(e=(e=e.concat([i[n].value.hsv[0]/360],[i[n].value.hsv[1]],[i[n].value.hsv[2]],[i[n].value.alpha])).concat(i[n].value.params));return e},s=document.getElementById("fps"),l=document.getElementById("meanRenderTime"),f=document.getElementById("meanTickTime"),v=document.getElementById("lastTickTime"),p=document.getElementById("meanPixelsProcessed"),h=document.getElementById("lastPixelsProcessed"),d={mean:0,delta:0,frames:[],lastFrameTimeStamp:performance.now(),measure:function(){var e=performance.now(),n=e-this.lastFrameTimeStamp;this.lastFrameTimeStamp=e;var t=1/n*1e3;this.delta=n/1e3,this.frames.push(t),this.frames.length>100&&this.frames.shift(),this.mean=w(this.frames)}},m={mean:0,last:0,frames:[],startTime:performance.now(),start:function(){this.startTime=performance.now()},stop:function(){if(!window.paused){var e=performance.now()-this.startTime;this.last=e,this.frames.push(e),this.frames.length>100&&this.frames.shift(),this.mean=w(this.frames)}}},y={mean:0,last:0,frames:[],startTime:performance.now(),start:function(){this.startTime=performance.now()},stop:function(){var e=performance.now()-this.startTime;this.last=e,v.textContent=window.paused?"".concat(Math.round(this.last),"ms"):"",this.frames.push(e),this.frames.length>100&&this.frames.shift(),this.mean=w(this.frames)}},x={mean:0,last:0,frames:[],measure:function(e){this.last=e,h.textContent=window.paused?"".concat(Math.round(this.last)," \n        (").concat(_(this.last,ge.size*ge.size),"%)"):"",this.frames.push(e),this.frames.length>10&&this.frames.shift(),this.mean=w(this.frames)},reset:function(){this.mean=0,this.last=0,this.frames=[]}},w=function(e){for(var n=0,t=0;t<e.length;t++)n+=e[t];return n/e.length},_=function(e,n){return Math.round(100*e/n)};setInterval((function(){s.textContent="FPS: ".concat(Math.round(d.mean)),l.textContent="".concat(Math.round(m.mean),"ms"),f.textContent="".concat(Math.round(y.mean),"ms"),p.textContent="".concat(Math.round(x.mean)," \n    (").concat(_(Math.round(x.mean),ge.size*ge.size),"%)")}),100);var g=t(13),k=document.getElementById("canvas");g("document").ready((function(){P(),T(),D(),B(),I()}));var b=g("#create"),z=g("#generateSeed"),C=g("#configUseChunks"),M=g("#configChunkSize"),E=!1,S=g("#showActiveChunks");b.click((function(){ge.size=Number(g("#configSize").val()),ge.gravity=ve(g("#configGravity").val(),-1,1),ge.maxVelocity=ve(g("#configMaxVelocity").val(),0,100),ge.useChunks=C.is(":checked"),ge.chunkSize=Number(M.val()),ge.generator=function(e){for(var n in c)if(c.hasOwnProperty(n)&&c[n].value.name===e)return n;return null}(g("#configGenerator").val()),ge.seed=Number(g("#seed").val()),be(),I()})),z.click((function(){ge.seed=_e(),I()}));var I=function(){g("#configSize").val(ge.size),g("#configGravity").val(ge.gravity),g("#configMaxVelocity").val(ge.maxVelocity),g("#configGenerator").val(c[ge.generator].value.name),g("#seed").val(ge.seed),C.prop("checked",ge.useChunks),M.val(ge.chunkSize),M.prop("disabled",!ge.useChunks)},P=function(){o.forEach((function(e){var n="<option>".concat(e,"</option>");g("#configSize").append(n)}))},T=function(){a.forEach((function(e){var n="<option>".concat(e,"</option>");g("#configChunkSize").append(n)}))},D=function(){for(var e in c)if(c.hasOwnProperty(e)){var n="<option>".concat(c[e].value.name,"</option>");g("#configGenerator").append(n)}};C.change((function(){M.prop("disabled",!this.checked),S.prop("disabled",!this.checked)})),S.change((function(){E=this.checked}));var Y=!1,A=g("#play"),V=g("#pause"),L=g("#nextFrame"),F=g("#reset");A.hide(),L.addClass("disabled"),A.click((function(){return X()})),V.click((function(){return X()})),L.click((function(){return O()})),F.click((function(){return j()})),g("body").keypress((function(e){112===e.keyCode?X():102===e.keyCode?O():114===e.keyCode&&j()}));var X=function(){Y=!Y,window.paused=Y,Y?(A.show(),V.hide(),L.removeClass("disabled")):(A.hide(),V.show(),L.addClass("disabled"))},O=function(){Y&&(y.start(),x.measure(ze()),y.stop())},j=function(){ne.clear(),x.reset()},N=null,R=function(e){var n,t,r,o;return"rgb("+(n=i[e].value.hsv[0],t=i[e].value.hsv[1],r=i[e].value.hsv[2],[255*(o=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(e+n/60)%6;return r-r*t*Math.max(Math.min(i,4-i,1),0)})(5),255*o(3),255*o(1)]).join(",")+")"},B=function(){var e=function(e){if(i.hasOwnProperty(e)){var n='\n                <div class="form-check">\n                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="element_'.concat(e,'">\n                    <label class="form-check-label" for="element_').concat(e,'">\n                        <i class="bi bi-square-fill" style="color: ').concat(R(e),'"></i>\n                        <label>').concat(i[e].value.name,"</label>\n                    </label>\n                </div>");g("#painting").append(n),g("#element_"+e).change((function(){return N=Number(e)}))}};for(var n in i)e(n);N=2,g("#element_2").attr("checked",!0)},G={value:0,step:1,min:0,max:5},q=g("#brushSize");q.on("change",(function(){G.value=ve(Number(g(this).val()),G.min,G.max)})),g(window).bind("mousewheel DOMMouseScroll",(function(e){e.originalEvent.wheelDelta>0||e.originalEvent.detail<0?(G.value=ve(G.value+G.step,G.min,G.max),q.val(G.value)):(G.value=ve(G.value-G.step,G.min,G.max),q.val(G.value))}));var W=null,K=!1,U=null,H=g("#inspectCheck"),J=g("#inspectDetails");J.hide(),H.click((function(){H.prop("checked")?(K=!0,clearInterval(U),U=window.setInterval((function(){return Q()}),100)):(K=!1,clearInterval(U))}));var Q=function(){if(K&&W){var e=ne.pixel_info(W[0],W[1]);e&&(J.show(),g("#inspectElement").text(i[e.element].value.name),g("#inspectPosition").text("("+W[0]+", "+W[1]+")"),void 0!==e.velocity_x&&void 0!==e.velocity_y?(g("#inspectVelocity").text("("+e.velocity_x+", "+e.velocity_y+")"),g("#inspectVelocityRow").show()):g("#inspectVelocityRow").hide(),void 0!==e.falling?(g("#inspectFalling").text(e.falling),g("#inspectFallingRow").show()):g("#inspectFallingRow").hide(),void 0!==e.not_moved_count?(g("#inspectNotMovedCount").text(e.not_moved_count),g("#inspectNotMovedCountRow").show()):g("#inspectNotMovedCountRow").hide())}else J.hide()},Z=!1,$=null,ee=null;k.addEventListener("mousedown",(function(e){e.preventDefault(),Z=!0,clearInterval(ee),ee=window.setInterval((function(){return re(e)}),100),re(e),$=e})),document.body.addEventListener("mouseup",(function(e){clearInterval(ee),Z&&(e.preventDefault(),$=null,Z=!1)})),k.addEventListener("mousemove",(function(e){clearInterval(ee),ie(e),function(e){W=H.prop("checked")?oe(e):null}(e)})),k.addEventListener("mouseleave",(function(){clearInterval(ee),$=null,W=null}));var ne,te,re=function(e){if(Z){var n=oe(e);ne.insert(n[0],n[1],N,G.value)}},ie=function(e){clearInterval(ee),ee=window.setInterval((function(){return re(e)}),100);var n={clientX:e.clientX,clientY:e.clientY};if(Z){var t=0;if(re(n),$)for(;ae(n,$)>1/3;){var r=ae(n,$);if(n=ce(n,le(se(ue($,e)),Math.min(1/3,r))),++t>1e3)break;re(n)}$=e}},oe=function(e){var n=k.getBoundingClientRect(),t=k.width/Math.ceil(window.devicePixelRatio)/n.width,r=k.height/Math.ceil(window.devicePixelRatio)/n.height,i=(e.clientX-n.left)*t,o=(e.clientY-n.top)*r;return[Math.max(Math.min(Math.floor(i),ge.size-1),0),Math.max(Math.min(Math.floor(o),ge.size-1),0)]},ae=function(e,n){return Math.sqrt(Math.pow(e.clientX-n.clientX,2)+Math.pow(e.clientY-n.clientY,2),2)},ce=function(e,n){return{clientX:e.clientX+n.clientX,clientY:e.clientY+n.clientY}},ue=function(e,n){return{clientX:e.clientX-n.clientX,clientY:e.clientY-n.clientY}},se=function(e){var n=fe(e);return{clientX:e.clientX/n,clientY:e.clientY/n}},le=function(e,n){return{clientX:e.clientX*n,clientY:e.clientY*n}},fe=function(e){return Math.sqrt(Math.pow(e.clientX,2)+Math.pow(e.clientY,2),2)},ve=function(e,n,t){return Math.min(Math.max(e,n),t)},pe=t(10),he=t(14),de=t(15),me=t(16),ye=t(17),xe=t(18),we=function(e){var n=e.canvas,t=e.map,r=e.config,o=he({extensions:["OES_texture_float"],canvas:n}),a=[2,i.length],c=o.texture({width:a[0],height:a[1],type:"float",data:u()}),s=t.config().size,l=o.texture({width:s,height:s,data:new Uint8Array(pe.ib.buffer,t.display(),s*s*4)}),f=o({vert:de,frag:me,uniforms:{time:function(e){return e.tick},element_texture_dim:a,element_texture:c,map_size:s,map_texture:function(){return l({width:s,height:s,data:new Uint8Array(pe.ib.buffer,t.display(),s*s*4)})}},attributes:{position:[[-1,4],[-1,-1],[4,-1]]},count:3}),v=o({vert:ye,frag:xe,attributes:{position:[[-1,-1],[1,-1],[1,1],[-1,1]]},uniforms:{color:[0,1,0,.5],scale:o.prop("scale"),offset:o.prop("offset")},count:4,lineWidth:1,primitive:"line loop"}),p=function(){var e=[];if(r.useChunks)for(var n=r.chunkSize/s,i=0;i<t.chunks_count();i++){var o=t.chunk(i);e.push({scale:n,offset:[-1+n+o.x()/r.size*2,1-n-o.y()/r.size*2]})}return e}(),h=function(){r.useChunks&&E&&v(p.filter((function(e,n){return t.chunk(n).active_next_tick()})))};return function(){o.poll(),h(),f()}},_e=function(){return Math.floor(Math.random()*Math.floor(1e4))},ge={size:256,gravity:.2,maxVelocity:10,useChunks:!0,chunkSize:32,generator:r.d.EMPTY,seed:1},ke=document.getElementById("canvas"),be=function(){ne=r.b.new(r.c.new(ge.size,ge.gravity,ge.maxVelocity,ge.useChunks,ge.chunkSize,ge.seed),Number(ge.generator)),ke.width=ge.size*Math.ceil(window.devicePixelRatio),ke.height=ge.size*Math.ceil(window.devicePixelRatio),te=we({canvas:ke,map:ne,config:ge}),x.reset()};be();var ze=function(){return ne.tick(d.delta)};!function e(){d.measure(),window.paused||(y.start(),x.measure(ze()),y.stop()),m.start(),te(),m.stop(),window.animationId=requestAnimationFrame(e)}()}]]);
//# sourceMappingURL=1.096a2be2363674112218.js.map