{"version":3,"sources":["webpack:///./render.js","webpack:///./ui.js","webpack:///./main.js","webpack:///../engine/pkg/engine_bg.js"],"names":["reglBuilder","require","canvas","document","getElementById","painting","lastPaint","repeat","addEventListener","event","preventDefault","clearInterval","window","setInterval","paint","body","startEvent","clientX","clientY","i","eventDistance","d","add","scale","norm","sub","Math","min","smoothPaint","boundingRect","getBoundingClientRect","scaleX","width","ceil","devicePixelRatio","scaleY","height","canvasLeft","left","canvasTop","top","x","floor","y","map","insert","Element","Sand","a","b","sqrt","pow","mag","magnitude","s","Map","regl","ptr_pixels","pixels","dataTexture","drawMap","Uint8Array","memory","buffer","texture","data","frag","vert","uniforms","attributes","position","count","poll","renderLoop","paused","tick","animationId","requestAnimationFrame","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","wasm","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Object","freeze","Empty","Wall","this","element","Pixel","__wrap","PixelState","obj","create","prototype","__wbg_new_59cb74e423758ede","addHeapObject","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"0QAAMA,EAAcC,EAAQ,GCGtBC,EAASC,SAASC,eAAe,UAEnCC,GAAW,EACXC,EAAY,KACZC,EAAS,KAEbL,EAAOM,iBAAiB,aAAa,SAAAC,GACjCA,EAAMC,iBACNL,GAAW,EACXM,cAAcJ,GACdA,EAASK,OAAOC,aAAY,kBAAMC,EAAML,KAAQ,KAChDK,EAAML,GACNH,EAAYG,KAGhBN,SAASY,KAAKP,iBAAiB,WAAW,SAAAC,GACtCE,cAAcJ,GACVF,IACAI,EAAMC,iBACNJ,EAAY,KACZD,GAAW,MAInBH,EAAOM,iBAAiB,aAAa,SAAAC,GACjCE,cAAcJ,GA+BlB,SAAqBE,GACjBE,cAAcJ,GACdA,EAASK,OAAOC,aAAY,kBAAMC,EAAML,KAAQ,KAEhD,IAAIO,EAAa,CAAEC,QAASR,EAAMQ,QAASC,QAAST,EAAMS,SAE1D,IAAKb,EACD,OAGJ,IAAIc,EAAI,EAGR,GAFAL,EAAME,GAEFV,EACA,KAAOc,EAAcJ,EAAYV,GAAa,EAAI,GAAG,CACjD,IAAIe,EAAID,EAAcJ,EAAYV,GAMlC,GALAU,EAAaM,EACTN,EACAO,EAAMC,EAAKC,EAAInB,EAAWG,IAASiB,KAAKC,IAAI,EAAI,EAAGN,OAEvDF,EACQ,IACJ,MAEJL,EAAME,GAGdV,EAAYG,EAzDZmB,CAAYnB,MAGhBP,EAAOM,iBAAiB,cAAc,SAAAC,GAClCE,cAAcJ,GACdD,EAAY,QAGhB,IAAMQ,EAAQ,SAAAL,GACV,GAAKJ,EAAL,CAGA,IAAMwB,EAAe3B,EAAO4B,wBAEtBC,EAAS7B,EAAO8B,MAAQN,KAAKO,KAAKrB,OAAOsB,kBAAoBL,EAAaG,MAC1EG,EAASjC,EAAOkC,OAASV,KAAKO,KAAKrB,OAAOsB,kBAAoBL,EAAaO,OAE3EC,GAAc5B,EAAMQ,QAAUY,EAAaS,MAAQP,EACnDQ,GAAa9B,EAAMS,QAAUW,EAAaW,KAAOL,EAEjDM,EAAIf,KAAKC,IAAID,KAAKgB,MAAML,GAAaL,EAAQ,GAC7CW,EAAIjB,KAAKC,IAAID,KAAKgB,MAAMH,GAAYH,EAAS,GAEnDQ,EAAIC,OACAJ,EACAE,EACAG,IAAQC,QAkChB,IAAM3B,EAAgB,SAAC4B,EAAGC,GACtB,OAAOvB,KAAKwB,KACRxB,KAAKyB,IAAIH,EAAE/B,QAAUgC,EAAEhC,QAAS,GAAKS,KAAKyB,IAAIH,EAAE9B,QAAU+B,EAAE/B,QAAS,GACrE,IAIFI,EAAM,SAAC0B,EAAGC,GACZ,MAAO,CAAEhC,QAAS+B,EAAE/B,QAAUgC,EAAEhC,QAASC,QAAS8B,EAAE9B,QAAU+B,EAAE/B,UAG9DO,EAAM,SAACuB,EAAGC,GACZ,MAAO,CAAEhC,QAAS+B,EAAE/B,QAAUgC,EAAEhC,QAASC,QAAS8B,EAAE9B,QAAU+B,EAAE/B,UAG9DM,EAAO,SAAAwB,GACT,IAAII,EAAMC,EAAUL,GACpB,MAAO,CAAE/B,QAAS+B,EAAE/B,QAAUmC,EAAKlC,QAAS8B,EAAE9B,QAAUkC,IAGtD7B,EAAQ,SAACyB,EAAGM,GACd,MAAO,CAAErC,QAAS+B,EAAE/B,QAAUqC,EAAGpC,QAAS8B,EAAE9B,QAAUoC,IAGpDD,EAAY,SAAAL,GACd,OAAOtB,KAAKwB,KAAKxB,KAAKyB,IAAIH,EAAE/B,QAAS,GAAKS,KAAKyB,IAAIH,EAAE9B,QAAS,GAAI,IC9GlEc,EAAQ,IACRI,EAAS,IACPQ,EAAMW,IAAG,IAAKvB,EAAOI,GAErBlC,EAASC,SAASC,eAAe,UAEvCF,EAAO8B,MAAQA,EAAQN,KAAKO,KAAKrB,OAAOsB,kBACxChC,EAAOkC,OAASA,EAASV,KAAKO,KAAKrB,OAAOsB,kBAE1C,IFVkB,EAAEhC,EAAQ0C,EAClBY,EAIAxB,EACAI,EACFqB,EACAC,EACEC,EAEFC,EEDJA,GFVgB1D,GAAF,EEUO,CAAEA,SAAQ0C,QFVf1C,OAAQ0C,EAAU,EAAVA,IAClBY,EAAOxD,EAAY,CACrBE,WAGE8B,EAAQY,EAAIZ,QACZI,EAASQ,EAAIR,SACfqB,EAAab,EAAIc,SACjBA,EAAS,IAAIG,WAAWC,IAAOC,OAAQN,EAAYzB,EAAQI,EAAS,GAClEuB,EAAcH,EAAKQ,QAAQ,CAAEhC,QAAOI,SAAQ6B,KAAMP,IAEpDE,EAAUJ,EAAK,CACfU,KAAM,quBA2BNC,KAAM,gNASNC,SAAU,CACNH,KAAM,WAIF,OAHAR,EAAab,EAAIc,SACjBA,EAAS,IAAIG,WAAWC,IAAOC,OAAQN,EAAYzB,EAAQI,EAAS,GAE7DuB,EAAY,CAAC3B,QAAOI,SAAQ6B,KAAMP,MAIjDW,WAAY,CACRC,SAAU,CAAC,EAAE,EAAG,GAAI,EAAE,GAAI,GAAI,CAAC,GAAI,KAGvCC,MAAO,IAGJ,WACHf,EAAKgB,OACLZ,OEtDW,SAAba,IACG7D,OAAO8D,QACR9B,EAAI+B,OAGRf,IACAhD,OAAOgE,YAAcC,sBAAsBJ,GAG/CA,I,kmBCtBA,IAAMK,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAIhC,SAASC,EAAUC,GAAO,OAAOL,EAAKK,GAFtCL,EAAKM,UAAKH,EAAW,MAAM,GAAM,GAIjC,IAAII,EAAYP,EAAKQ,OAQrB,SAASC,EAAWJ,GAChB,IAAMK,EAAMN,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVL,EAAKK,GAAOE,EACZA,EAAYF,GAKZM,CAAWN,GACJK,EAGX,IAEIE,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIC,EAAO3F,SAAS,QAAQ0F,YAAcA,aAE3D,QAAS,CAAEE,WAAW,EAAMC,OAAO,IAE5EJ,EAAkBK,SAElB,IAAIC,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBjC,SAAWmC,IAAYnC,SAC7EiC,EAAuB,IAAInC,WAAWqC,IAAYnC,SAE/CiC,EAGX,SAASG,EAAmBC,EAAKC,GAC7B,OAAOX,EAAkBK,OAAOE,IAAkBK,SAASF,EAAKA,EAAMC,IAY1E,IAAIE,EAAkB,EAIlBC,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIb,EAAO3F,SAAS,QAAQwG,YAAcA,aAE3D,SAEnCC,EAAwD,mBAAjCF,EAAkBG,WACzC,SAAUC,EAAKC,GACjB,OAAOL,EAAkBG,WAAWC,EAAKC,IAEvC,SAAUD,EAAKC,GACjB,IAAMC,EAAMN,EAAkBO,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACHG,KAAML,EAAItB,OACV4B,QAASJ,EAAIxB,SA0CrB,IAAI6B,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBpD,SAAWmC,IAAYnC,SAC7EoD,EAAuB,IAAIE,WAAWnB,IAAYnC,SAE/CoD,EAIJ,IAAMrE,EAAUwE,OAAOC,OAAO,CAAEC,MAAM,EAAE,EAAI,QAAQC,KAAK,EAAE,EAAI,OAAO1E,KAAK,EAAE,EAAI,SAG3EQ,EAAb,gEASI,WACI,IAAM6C,EAAMsB,KAAKtB,IACjBsB,KAAKtB,IAAM,EAEXF,IAAoBE,KAb5B,oBA6BI,SAAO3D,EAAGE,EAAGgF,GACTzB,IAAgBwB,KAAKtB,IAAK3D,EAAGE,EAAGgF,KA9BxC,mBAkCI,WACIzB,IAAewB,KAAKtB,OAnC5B,kBAuCI,WACIF,IAAcwB,KAAKtB,OAxC3B,mBA6CI,WAEI,OADUF,IAAewB,KAAKtB,OA9CtC,oBAoDI,WAEI,OADUF,IAAgBwB,KAAKtB,OArDvC,wBA2DI,WAEI,OADUF,IAAoBwB,KAAKtB,OA5D3C,oBAkEI,WAEI,OADUF,IAAgBwB,KAAKtB,OAnEvC,uBA2EI,SAAU3D,EAAGE,GACT,IAAI6C,EAAMU,IAAmBwB,KAAKtB,IAAK3D,EAAGE,GAC1C,OAAOiF,EAAMC,OAAOrC,KA7E5B,6BAoFI,SAAgB/C,EAAGE,GACf,IAAI6C,EAAMU,IAAyBwB,KAAKtB,IAAK3D,EAAGE,GAChD,OAAOmF,EAAWD,OAAOrC,MAtFjC,qBAEI,SAAcY,GACV,IAAM2B,EAAMT,OAAOU,OAAOzE,EAAI0E,WAG9B,OAFAF,EAAI3B,IAAMA,EAEH2B,IANf,iBAoBI,SAAW/F,EAAOI,GACd,IAAIoD,EAAMU,IAAalE,EAAOI,GAC9B,OAAOmB,EAAIsE,OAAOrC,OAtB1B,KA2FaoC,EAAb,gEASI,WACI,IAAMxB,EAAMsB,KAAKtB,IACjBsB,KAAKtB,IAAM,EAEXF,IAAsBE,KAb9B,qBA0BI,WAEI,OADUF,IAAmBwB,KAAKtB,OACnB,KA5BvB,qBAEI,SAAcA,GACV,IAAM2B,EAAMT,OAAOU,OAAOJ,EAAMK,WAGhC,OAFAF,EAAI3B,IAAMA,EAEH2B,IANf,iBAmBI,SAAWJ,GACP,IAAInC,EAAMU,IAAeyB,GACzB,OAAOC,EAAMC,OAAOrC,OArB5B,KAiCasC,EAAb,gEASI,WACI,IAAM1B,EAAMsB,KAAKtB,IACjBsB,KAAKtB,IAAM,EAEXF,IAA2BE,KAbnC,qBA0BI,WAEI,OADUF,IAAmBwB,KAAKtB,OACnB,IA5BvB,mBAiCI,WAEI,OADUF,IAAsBwB,KAAKtB,QAlC7C,qBAEI,SAAcA,GACV,IAAM2B,EAAMT,OAAOU,OAAOF,EAAWG,WAGrC,OAFAF,EAAI3B,IAAMA,EAEH2B,IANf,iBAmBI,SAAWJ,GACP,IAAInC,EAAMU,IAAeyB,GACzB,OAAOG,EAAWD,OAAOrC,OArBjC,KAuCa0C,EAA6B,WAEtC,OAnPJ,SAAuBH,GACf1C,IAAcP,EAAKQ,QAAQR,EAAKM,KAAKN,EAAKQ,OAAS,GACvD,IAAMH,EAAME,EAIZ,OAHAA,EAAYP,EAAKK,GAEjBL,EAAKK,GAAO4C,EACL5C,EA6OAgD,CADG,IAAIC,QAILC,EAA+B,SAASC,EAAMC,GACvD,IACIC,EA5NR,SAA2B5B,EAAK6B,EAAQC,GAEpC,QAAgBzD,IAAZyD,EAAuB,CACvB,IAAM5B,EAAMN,EAAkBO,OAAOH,GAC/BR,EAAMqC,EAAO3B,EAAIxB,QAGvB,OAFAW,IAAkBK,SAASF,EAAKA,EAAMU,EAAIxB,QAAQ0B,IAAIF,GACtDP,EAAkBO,EAAIxB,OACfc,EAUX,IAPA,IAAIC,EAAMO,EAAItB,OACVc,EAAMqC,EAAOpC,GAEXsC,EAAM1C,IAER2C,EAAS,EAENA,EAASvC,EAAKuC,IAAU,CAC3B,IAAMC,EAAOjC,EAAIkC,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAIvC,EAAMwC,GAAUC,EAGxB,GAAID,IAAWvC,EAAK,CACD,IAAXuC,IACAhC,EAAMA,EAAImC,MAAMH,IAEpBxC,EAAMsC,EAAQtC,EAAKC,EAAKA,EAAMuC,EAAsB,EAAbhC,EAAItB,QAC3C,IAAMuB,EAAOZ,IAAkBK,SAASF,EAAMwC,EAAQxC,EAAMC,GAG5DuC,GAFYlC,EAAaE,EAAKC,GAEhBK,QAIlB,OADAX,EAAkBqC,EACXxC,EAyLI4C,CADD9D,EAAUqD,GAAMU,MACQ/C,IAAwBA,KACtDgD,EAAO3C,EACXa,IAAkBkB,EAAO,EAAI,GAAKY,EAClC9B,IAAkBkB,EAAO,EAAI,GAAKE,GAGzBW,EAA+B,SAASb,EAAMC,GACvD,IACIa,QAAQC,MAAMlD,EAAmBmC,EAAMC,IAD3C,QAGIrC,IAAqBoC,EAAMC,KAItBe,EAA6B,SAAShB,GAC/C/C,EAAW+C,IAGFiB,EAAmB,SAASjB,EAAMC,GAC3C,MAAM,IAAIH,MAAMjC,EAAmBmC,EAAMC,O","file":"1.dc6af38d49239ab75416.js","sourcesContent":["const reglBuilder = require(\"regl\");\r\nimport { memory } from \"./node_modules/engine/engine_bg\";\r\n\r\nlet startWebGL = ({ canvas, map }) => {\r\n    const regl = reglBuilder({\r\n        canvas\r\n    });\r\n\r\n    const width = map.width();\r\n    const height = map.height();\r\n    let ptr_pixels = map.pixels();\r\n    let pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n    const dataTexture = regl.texture({ width, height, data: pixels });\r\n\r\n    let drawMap = regl({\r\n        frag: `\r\n        precision highp float;\r\n        uniform sampler2D data;\r\n        varying vec2 uv;\r\n        void main() {\r\n            vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\r\n            vec4 data = texture2D(data, textCoord);\r\n            int element = int((data.r * 255.) + 0.1);\r\n            vec4 color;\r\n            \r\n            // empty\r\n            if (element == 0) {\r\n                color = vec4(1, 1, 1, 1);\r\n            }\r\n            \r\n            if (element == 1) {\r\n                color = vec4(0, 0, 0, 1);\r\n            }\r\n            \r\n            // sand\r\n            if (element == 2) {\r\n                color = vec4(0.76, 0.7, 0.5, 1);\r\n            }\r\n            \r\n            gl_FragColor = color;\r\n        }`,\r\n\r\n        vert: `\r\n        precision mediump float;\r\n        attribute vec2 position;\r\n        varying vec2 uv;\r\n        void main() {\r\n            uv = position;\r\n            gl_Position = vec4(position, 0, 1);\r\n        }`,\r\n\r\n        uniforms: {\r\n            data: () => {\r\n                ptr_pixels = map.pixels();\r\n                pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n\r\n                return dataTexture({width, height, data: pixels});\r\n            },\r\n        },\r\n\r\n        attributes: {\r\n            position: [[-1, 4], [-1, -1], [4, -1]]\r\n        },\r\n\r\n        count: 3,\r\n    });\r\n\r\n    return () => {\r\n        regl.poll();\r\n        drawMap();\r\n    };\r\n};\r\n\r\nexport { startWebGL};","import { width, height, map } from \"./main.js\";\r\nimport { Element } from \"./node_modules/engine/engine.js\";\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\nlet painting = false;\r\nlet lastPaint = null;\r\nlet repeat = null;\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\n    event.preventDefault();\r\n    painting = true;\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n    paint(event);\r\n    lastPaint = event;\r\n});\r\n\r\ndocument.body.addEventListener(\"mouseup\", event => {\r\n    clearInterval(repeat);\r\n    if (painting) {\r\n        event.preventDefault();\r\n        lastPaint = null;\r\n        painting = false;\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", event => {\r\n    clearInterval(repeat);\r\n    smoothPaint(event);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseleave\", event => {\r\n    clearInterval(repeat);\r\n    lastPaint = null;\r\n});\r\n\r\nconst paint = event => {\r\n    if (!painting) {\r\n        return;\r\n    }\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const scaleX = canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width;\r\n    const scaleY = canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height;\r\n\r\n    const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n    const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n    const x = Math.min(Math.floor(canvasLeft), width - 1);\r\n    const y = Math.min(Math.floor(canvasTop), height - 1);\r\n\r\n    map.insert(\r\n        x,\r\n        y,\r\n        Element.Sand\r\n    );\r\n};\r\n\r\nfunction smoothPaint(event) {\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n\r\n    let startEvent = { clientX: event.clientX, clientY: event.clientY };\r\n\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    paint(startEvent);\r\n\r\n    if (lastPaint) {\r\n        while (eventDistance(startEvent, lastPaint) > 1 / 3) {\r\n            let d = eventDistance(startEvent, lastPaint);\r\n            startEvent = add(\r\n                startEvent,\r\n                scale(norm(sub(lastPaint, event)), Math.min(1 / 3, d))\r\n            );\r\n            i++;\r\n            if (i > 1000) {\r\n                break;\r\n            }\r\n            paint(startEvent);\r\n        }\r\n    }\r\n    lastPaint = event;\r\n}\r\n\r\nconst eventDistance = (a, b) => {\r\n    return Math.sqrt(\r\n        Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\r\n        2\r\n    );\r\n};\r\n\r\nconst add = (a, b) => {\r\n    return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\r\n};\r\n\r\nconst sub = (a, b) => {\r\n    return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\r\n};\r\n\r\nconst norm = a => {\r\n    let mag = magnitude(a);\r\n    return { clientX: a.clientX / mag, clientY: a.clientY / mag };\r\n};\r\n\r\nconst scale = (a, s) => {\r\n    return { clientX: a.clientX * s, clientY: a.clientY * s };\r\n};\r\n\r\nconst magnitude = a => {\r\n    return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\r\n};","import { Map } from \"./node_modules/engine/engine.js\";\r\nimport { startWebGL } from \"./render\";\r\nimport {} from \"./ui\";\r\n\r\nlet width = 100;\r\nlet height = 100;\r\nconst map = Map.new(width, height);\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\ncanvas.width = width * Math.ceil(window.devicePixelRatio);\r\ncanvas.height = height * Math.ceil(window.devicePixelRatio);\r\n\r\nlet drawMap = startWebGL({ canvas, map });\r\n\r\nconst renderLoop = () => {\r\n    if (!window.paused) {\r\n        map.tick();\r\n    }\r\n\r\n    drawMap();\r\n    window.animationId = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nrenderLoop();\r\n\r\nexport { canvas, width, height, map };","import * as wasm from './engine_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const Element = Object.freeze({ Empty:0,\"0\":\"Empty\",Wall:1,\"1\":\"Wall\",Sand:2,\"2\":\"Sand\", });\n/**\n*/\nexport class Map {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Map.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_map_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Map}\n    */\n    static new(width, height) {\n        var ret = wasm.map_new(width, height);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} element\n    */\n    insert(x, y, element) {\n        wasm.map_insert(this.ptr, x, y, element);\n    }\n    /**\n    */\n    clear() {\n        wasm.map_clear(this.ptr);\n    }\n    /**\n    */\n    tick() {\n        wasm.map_tick(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.map_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.map_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    generation() {\n        var ret = wasm.map_generation(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    pixels() {\n        var ret = wasm.map_pixels(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {Pixel}\n    */\n    get_pixel(x, y) {\n        var ret = wasm.map_get_pixel(this.ptr, x, y);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {PixelState}\n    */\n    get_pixel_state(x, y) {\n        var ret = wasm.map_get_pixel_state(this.ptr, x, y);\n        return PixelState.__wrap(ret);\n    }\n}\n/**\n*/\nexport class Pixel {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Pixel.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pixel_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {Pixel}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class PixelState {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PixelState.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pixelstate_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {PixelState}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return PixelState.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    clock() {\n        var ret = wasm.pixelstate_clock(this.ptr);\n        return ret;\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}