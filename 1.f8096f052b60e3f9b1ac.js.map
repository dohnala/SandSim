{"version":3,"sources":["webpack:///./render.js","webpack:///./performance.js","webpack:///./ui.js","webpack:///./main.js","webpack:///../engine/pkg/engine_bg.js"],"names":["reglBuilder","require","fpsLabel","document","getElementById","meanFrameTimeLabel","meanRenderTimeLabel","meanTickTimeLabel","lastTickTimeLabel","fps","this","mean","frames","lastFrameTimeStamp","performance","now","delta","push","length","shift","measureMean","frameTime","last","startTime","window","paused","renderTime","tickTime","textContent","Math","round","array","sum","i","setInterval","$","canvas","selectedElement","Element","Sand","playButton","pauseButton","nextFrameButton","hide","addClass","click","togglePause","start","nextTick","stop","map","clear","show","removeClass","change","Empty","Wall","painting","lastPaint","repeat","addEventListener","event","preventDefault","clearInterval","paint","body","startEvent","clientX","clientY","eventDistance","d","add","scale","norm","sub","min","smoothPaint","boundingRect","getBoundingClientRect","scaleX","width","ceil","devicePixelRatio","scaleY","height","canvasLeft","left","canvasTop","top","x","floor","y","insert","a","b","sqrt","pow","mag","magnitude","s","Map","regl","ptr_pixels","pixels","dataTexture","drawMap","Uint8Array","memory","buffer","texture","data","frag","vert","uniforms","attributes","position","count","poll","tick","renderLoop","measure","animationId","requestAnimationFrame","heap","Array","fill","undefined","getObject","idx","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","wasm","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Object","freeze","element","Pixel","__wrap","PixelState","obj","create","prototype","__wbg_new_59cb74e423758ede","addHeapObject","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"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","file":"1.f8096f052b60e3f9b1ac.js","sourcesContent":["const reglBuilder = require(\"regl\");\r\nimport { memory } from \"./node_modules/engine/engine_bg\";\r\n\r\nlet startWebGL = ({ canvas, map }) => {\r\n    const regl = reglBuilder({\r\n        canvas\r\n    });\r\n\r\n    const width = map.width();\r\n    const height = map.height();\r\n    let ptr_pixels = map.pixels();\r\n    let pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n    const dataTexture = regl.texture({ width, height, data: pixels });\r\n\r\n    let drawMap = regl({\r\n        frag: `\r\n        precision highp float;\r\n        uniform sampler2D data;\r\n        varying vec2 uv;\r\n        void main() {\r\n            vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\r\n            vec4 data = texture2D(data, textCoord);\r\n            int element = int((data.r * 255.) + 0.1);\r\n            vec4 color;\r\n            \r\n            // empty\r\n            if (element == 0) {\r\n                color = vec4(255, 255, 255, 1);\r\n            }\r\n            \r\n            if (element == 1) {\r\n                color = vec4(0, 0, 0, 1);\r\n            }\r\n            \r\n            // sand\r\n            if (element == 2) {\r\n                color = vec4(0.76, 0.7, 0.5, 1);\r\n            }\r\n            \r\n            gl_FragColor = color;\r\n        }`,\r\n\r\n        vert: `\r\n        precision mediump float;\r\n        attribute vec2 position;\r\n        varying vec2 uv;\r\n        void main() {\r\n            uv = position;\r\n            gl_Position = vec4(position, 0, 1);\r\n        }`,\r\n\r\n        uniforms: {\r\n            data: () => {\r\n                ptr_pixels = map.pixels();\r\n                pixels = new Uint8Array(memory.buffer, ptr_pixels, width * height * 4);\r\n\r\n                return dataTexture({width, height, data: pixels});\r\n            },\r\n        },\r\n\r\n        attributes: {\r\n            position: [[-1, 4], [-1, -1], [4, -1]]\r\n        },\r\n\r\n        count: 3,\r\n    });\r\n\r\n    return () => {\r\n        regl.poll();\r\n        drawMap();\r\n    };\r\n};\r\n\r\nexport { startWebGL};","const MEAN_FRAMES_SIZE = 100;\r\n\r\nlet fpsLabel = document.getElementById(\"fps\");\r\nlet meanFrameTimeLabel = document.getElementById(\"meanFrameTime\");\r\nlet meanRenderTimeLabel = document.getElementById(\"meanRenderTime\");\r\nlet meanTickTimeLabel = document.getElementById(\"meanTickTime\");\r\nlet lastTickTimeLabel = document.getElementById(\"lastTickTime\");\r\n\r\nconst fps = new class {\r\n    constructor() {\r\n        this.mean = 0;\r\n        this.frames = [];\r\n        this.lastFrameTimeStamp = performance.now();\r\n    }\r\n\r\n    measure() {\r\n        const now = performance.now();\r\n        const delta = now - this.lastFrameTimeStamp;\r\n        this.lastFrameTimeStamp = now;\r\n        const fps = (1 / delta) * 1000;\r\n\r\n        this.frames.push(fps);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst frameTime = new class {\r\n    constructor() {\r\n        this.mean = 0;\r\n        this.last = 0;\r\n        this.frames = [];\r\n        this.startTime = performance.now();\r\n    }\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    }\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst renderTime = new class {\r\n    constructor() {\r\n        this.mean = 0;\r\n        this.last = 0;\r\n        this.frames = [];\r\n        this.startTime = performance.now();\r\n    }\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    }\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst tickTime = new class {\r\n    constructor() {\r\n        this.mean = 0;\r\n        this.last = 0;\r\n        this.frames = [];\r\n        this.startTime = performance.now();\r\n    }\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    }\r\n\r\n    stop() {\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        lastTickTimeLabel.textContent = window.paused ? `${Math.round(this.last)}ms` : \"\";\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst measureMean = array => {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        sum += array[i];\r\n    }\r\n\r\n    return  sum / array.length;\r\n}\r\n\r\nconst updateLabels = () => {\r\n    fpsLabel.textContent = `FPS: ${Math.round(fps.mean)}`;\r\n    meanFrameTimeLabel.textContent = `${Math.round(frameTime.mean)}ms`;\r\n    meanRenderTimeLabel.textContent = `${Math.round(renderTime.mean)}ms`;\r\n    meanTickTimeLabel.textContent = `${Math.round(tickTime.mean)}ms`;\r\n}\r\n\r\nsetInterval(updateLabels, 500);\r\n\r\nexport { fps, frameTime, renderTime, tickTime};","import {tickTime} from \"./performance\";\r\n\r\nvar $ = require( \"jquery\" );\r\n\r\nimport { width, height, map, nextTick } from \"./main.js\";\r\nimport { Element } from \"./node_modules/engine/engine.js\";\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\nlet selectedElement = Element.Sand;\r\n\r\nlet paused = false;\r\nlet playButton = $('#play')\r\nlet pauseButton = $('#pause')\r\nlet nextFrameButton = $('#nextFrame')\r\n\r\nplayButton.hide();\r\nnextFrameButton.addClass(\"disabled\");\r\n\r\nplayButton.click(() => togglePause());\r\npauseButton.click(() => togglePause());\r\n\r\nnextFrameButton.click(() => {\r\n    if (paused) {\r\n        tickTime.start();\r\n        nextTick();\r\n        tickTime.stop();\r\n    }\r\n});\r\n\r\n$('#reset').click(() => map.clear());\r\n\r\nconst togglePause = () => {\r\n    paused = !paused;\r\n    window.paused = paused;\r\n\r\n    if (paused) {\r\n        playButton.show();\r\n        pauseButton.hide();\r\n        nextFrameButton.removeClass(\"disabled\");\r\n    } else {\r\n        playButton.hide();\r\n        pauseButton.show();\r\n        nextFrameButton.addClass(\"disabled\");\r\n    }\r\n}\r\n\r\n$('#emptyElement').change(() => selectedElement = Element.Empty);\r\n$('#wallElement').change(() => selectedElement = Element.Wall);\r\n$('#sandElement').change(() => selectedElement = Element.Sand);\r\n\r\nlet painting = false;\r\nlet lastPaint = null;\r\nlet repeat = null;\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\n    event.preventDefault();\r\n    painting = true;\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n    paint(event);\r\n    lastPaint = event;\r\n});\r\n\r\ndocument.body.addEventListener(\"mouseup\", event => {\r\n    clearInterval(repeat);\r\n    if (painting) {\r\n        event.preventDefault();\r\n        lastPaint = null;\r\n        painting = false;\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", event => {\r\n    clearInterval(repeat);\r\n    smoothPaint(event);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseleave\", event => {\r\n    clearInterval(repeat);\r\n    lastPaint = null;\r\n});\r\n\r\nconst paint = event => {\r\n    if (!painting) {\r\n        return;\r\n    }\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const scaleX = canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width;\r\n    const scaleY = canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height;\r\n\r\n    const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n    const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n    const x = Math.min(Math.floor(canvasLeft), width - 1);\r\n    const y = Math.min(Math.floor(canvasTop), height - 1);\r\n\r\n    map.insert(x, y, selectedElement);\r\n};\r\n\r\nfunction smoothPaint(event) {\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n\r\n    let startEvent = { clientX: event.clientX, clientY: event.clientY };\r\n\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    paint(startEvent);\r\n\r\n    if (lastPaint) {\r\n        while (eventDistance(startEvent, lastPaint) > 1 / 3) {\r\n            let d = eventDistance(startEvent, lastPaint);\r\n            startEvent = add(\r\n                startEvent,\r\n                scale(norm(sub(lastPaint, event)), Math.min(1 / 3, d))\r\n            );\r\n            i++;\r\n            if (i > 1000) {\r\n                break;\r\n            }\r\n            paint(startEvent);\r\n        }\r\n    }\r\n    lastPaint = event;\r\n}\r\n\r\nconst eventDistance = (a, b) => {\r\n    return Math.sqrt(\r\n        Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\r\n        2\r\n    );\r\n};\r\n\r\nconst add = (a, b) => {\r\n    return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\r\n};\r\n\r\nconst sub = (a, b) => {\r\n    return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\r\n};\r\n\r\nconst norm = a => {\r\n    let mag = magnitude(a);\r\n    return { clientX: a.clientX / mag, clientY: a.clientY / mag };\r\n};\r\n\r\nconst scale = (a, s) => {\r\n    return { clientX: a.clientX * s, clientY: a.clientY * s };\r\n};\r\n\r\nconst magnitude = a => {\r\n    return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\r\n};","import { Map } from \"./node_modules/engine/engine.js\";\r\nimport { startWebGL } from \"./render\";\r\nimport {} from \"./ui\";\r\nimport {fps, frameTime, renderTime, tickTime} from \"./performance\";\r\n\r\nlet width = 100;\r\nlet height = 100;\r\nconst map = Map.new(width, height);\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\ncanvas.width = width * Math.ceil(window.devicePixelRatio);\r\ncanvas.height = height * Math.ceil(window.devicePixelRatio);\r\n\r\nlet drawMap = startWebGL({ canvas, map });\r\n\r\nconst renderLoop = () => {\r\n    fps.measure();\r\n    frameTime.start();\r\n\r\n    if (!window.paused) {\r\n        tickTime.start();\r\n        nextTick();\r\n        tickTime.stop();\r\n    }\r\n\r\n    renderTime.start();\r\n    drawMap();\r\n    renderTime.stop();\r\n\r\n    frameTime.stop();\r\n\r\n    window.animationId = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nconst nextTick = () => {\r\n    map.tick();\r\n}\r\n\r\nrenderLoop();\r\n\r\nexport { canvas, width, height, map, nextTick};","import * as wasm from './engine_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const Element = Object.freeze({ Empty:0,\"0\":\"Empty\",Wall:1,\"1\":\"Wall\",Sand:2,\"2\":\"Sand\", });\n/**\n*/\nexport class Map {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Map.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_map_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Map}\n    */\n    static new(width, height) {\n        var ret = wasm.map_new(width, height);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} element\n    */\n    insert(x, y, element) {\n        wasm.map_insert(this.ptr, x, y, element);\n    }\n    /**\n    */\n    clear() {\n        wasm.map_clear(this.ptr);\n    }\n    /**\n    */\n    tick() {\n        wasm.map_tick(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.map_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.map_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    generation() {\n        var ret = wasm.map_generation(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    pixels() {\n        var ret = wasm.map_pixels(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {Pixel}\n    */\n    get_pixel(x, y) {\n        var ret = wasm.map_get_pixel(this.ptr, x, y);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {PixelState}\n    */\n    get_pixel_state(x, y) {\n        var ret = wasm.map_get_pixel_state(this.ptr, x, y);\n        return PixelState.__wrap(ret);\n    }\n}\n/**\n*/\nexport class Pixel {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Pixel.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pixel_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {Pixel}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return Pixel.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class PixelState {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PixelState.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pixelstate_free(ptr);\n    }\n    /**\n    * @param {number} element\n    * @returns {PixelState}\n    */\n    static new(element) {\n        var ret = wasm.pixel_new(element);\n        return PixelState.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    element() {\n        var ret = wasm.pixel_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    clock() {\n        var ret = wasm.pixelstate_clock(this.ptr);\n        return ret;\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}