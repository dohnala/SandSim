{"version":3,"sources":["webpack:///../engine/pkg/engine_bg.js","webpack:///./render/shaders/map.vert","webpack:///./render/shaders/map.frag","webpack:///./render/shaders/chunk.vert","webpack:///./render/shaders/chunk.frag","webpack:///./vars.js","webpack:///./performance.js","webpack:///./ui.js","webpack:///./main.js","webpack:///./render/render.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","_assertClass","instance","klass","Error","name","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachegetFloat32Memory0","getFloat32Memory0","Float32Array","isLikeNone","x","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","MapGenerator","Object","freeze","EMPTY","CAVE","Element","Empty","Wall","Sand","Dirt","Water","Chunk","this","__destroy_into_raw","obj","create","prototype","Map","y","element","radius","MapConfig","__wrap","PixelInfo","i","config","ptr0","generator","arg0","size","gravity","max_velocity","use_chunks","chunk_size","seed","retptr","r0","r1","__wbg_new_59cb74e423758ede","addHeapObject","__wbg_stack_558ba5917b466edd","arg1","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw","exports","elements","key","value","color","mapSizes","chunkSizes","mapGenerators","elementColorsArray","result","hasOwnProperty","concat","fpsLabel","document","getElementById","meanRenderTimeLabel","meanTickTimeLabel","lastTickTimeLabel","meanPixelsProcessedLabel","lastPixelsProcessedLabel","fps","mean","delta","frames","lastFrameTimeStamp","performance","now","measure","diff","shift","measureMean","renderTime","last","startTime","start","stop","window","paused","frameTime","tickTime","textContent","Math","round","pixelsProcessed","pixels","percentage","reset","array","sum","max","setInterval","$","canvas","ready","addMapSizes","addChunkSizes","addMapGenerators","addElements","updateCreateForm","createButton","generateSeedButton","useChunksCheckbox","chunkSizeSelect","showActiveChunks","showActiveChunksCheckbox","click","Number","val","clamp","maxVelocity","useChunks","is","chunkSize","mapGeneratorByName","createMap","generateSeed","prop","forEach","option","append","change","checked","playButton","pauseButton","nextFrameButton","resetButton","hide","addClass","togglePause","nextFrame","resetMap","keypress","event","keyCode","show","removeClass","nextTick","map","clear","selectedElement","radio","join","attr","brushSize","step","min","brushSizeSlider","on","bind","originalEvent","wheelDelta","detail","inspectPixelPosition","inspecting","inspectRepeat","inspectCheckBox","inspectDetails","clearInterval","inspectPixel","pixel","pixel_info","text","velocity_x","velocity_y","falling","not_moved_count","painting","lastPaint","repeat","addEventListener","preventDefault","paint","body","smoothPaint","getPixelPosition","findInspectPixelPosition","drawMap","pixelPosition","insert","startEvent","clientX","clientY","eventDistance","d","add","scale","norm","sub","boundingRect","getBoundingClientRect","scaleX","width","ceil","devicePixelRatio","scaleY","height","canvasLeft","left","canvasTop","top","floor","a","b","sqrt","pow","mag","magnitude","s","reglBuilder","map_vert","map_frag","chunk_vert","chunk_frag","startWebGL","regl","mapSize","elementTexture","texture","type","format","data","mapTexture","memory","display","vert","frag","uniforms","element_texture","element_count","map_texture","attributes","position","count","drawChunk","lineWidth","primitive","chunks","chunks_count","chunk","drawDebugInfo","filter","_","index","active_next_tick","poll","random","tick","renderLoop","animationId","requestAnimationFrame"],"mappings":"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","file":"1.e3044afba7548fa6370c.js","sourcesContent":["import * as wasm from './engine_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n*/\nexport const MapGenerator = Object.freeze({ EMPTY:0,\"0\":\"EMPTY\",CAVE:1,\"1\":\"CAVE\", });\n/**\n*/\nexport const Element = Object.freeze({ Empty:0,\"0\":\"Empty\",Wall:1,\"1\":\"Wall\",Sand:2,\"2\":\"Sand\",Dirt:3,\"3\":\"Dirt\",Water:4,\"4\":\"Water\", });\n/**\n*/\nexport class Chunk {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Chunk.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_chunk_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    x() {\n        var ret = wasm.__wbg_get_mapconfig_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    y() {\n        var ret = wasm.chunk_y(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {boolean}\n    */\n    active() {\n        var ret = wasm.chunk_active(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {boolean}\n    */\n    active_next_tick() {\n        var ret = wasm.chunk_active_next_tick(this.ptr);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class Map {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Map.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_map_free(ptr);\n    }\n    /**\n    * @param {MapConfig} config\n    * @returns {Map}\n    */\n    static new_empty(config) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new_empty(ptr0);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {MapConfig} config\n    * @returns {Map}\n    */\n    static new_cave(config) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new_cave(ptr0);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {MapConfig} config\n    * @param {number} generator\n    * @returns {Map}\n    */\n    static new(config, generator) {\n        _assertClass(config, MapConfig);\n        var ptr0 = config.ptr;\n        config.ptr = 0;\n        var ret = wasm.map_new(ptr0, generator);\n        return Map.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} element\n    * @param {number} radius\n    */\n    insert(x, y, element, radius) {\n        wasm.map_insert(this.ptr, x, y, element, radius);\n    }\n    /**\n    */\n    clear() {\n        wasm.map_clear(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    tick() {\n        var ret = wasm.map_tick(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {MapConfig}\n    */\n    config() {\n        var ret = wasm.map_config(this.ptr);\n        return MapConfig.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    display() {\n        var ret = wasm.map_display(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {PixelInfo | undefined}\n    */\n    pixel_info(x, y) {\n        var ret = wasm.map_pixel_info(this.ptr, x, y);\n        return ret === 0 ? undefined : PixelInfo.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    chunks_count() {\n        var ret = wasm.map_chunks_count(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {Chunk}\n    */\n    chunk(i) {\n        var ret = wasm.map_chunk(this.ptr, i);\n        return Chunk.__wrap(ret);\n    }\n}\n/**\n*/\nexport class MapConfig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MapConfig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mapconfig_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get size() {\n        var ret = wasm.__wbg_get_mapconfig_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set size(arg0) {\n        wasm.__wbg_set_mapconfig_size(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get gravity() {\n        var ret = wasm.__wbg_get_mapconfig_gravity(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gravity(arg0) {\n        wasm.__wbg_set_mapconfig_gravity(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get max_velocity() {\n        var ret = wasm.__wbg_get_mapconfig_max_velocity(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set max_velocity(arg0) {\n        wasm.__wbg_set_mapconfig_max_velocity(this.ptr, arg0);\n    }\n    /**\n    * @returns {boolean}\n    */\n    get use_chunks() {\n        var ret = wasm.__wbg_get_mapconfig_use_chunks(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {boolean} arg0\n    */\n    set use_chunks(arg0) {\n        wasm.__wbg_set_mapconfig_use_chunks(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get chunk_size() {\n        var ret = wasm.__wbg_get_mapconfig_chunk_size(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set chunk_size(arg0) {\n        wasm.__wbg_set_mapconfig_chunk_size(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get seed() {\n        var ret = wasm.__wbg_get_mapconfig_seed(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set seed(arg0) {\n        wasm.__wbg_set_mapconfig_seed(this.ptr, arg0);\n    }\n    /**\n    * @param {number} size\n    * @param {number} gravity\n    * @param {number} max_velocity\n    * @param {boolean} use_chunks\n    * @param {number} chunk_size\n    * @param {number} seed\n    * @returns {MapConfig}\n    */\n    static new(size, gravity, max_velocity, use_chunks, chunk_size, seed) {\n        var ret = wasm.mapconfig_new(size, gravity, max_velocity, use_chunks, chunk_size, seed);\n        return MapConfig.__wrap(ret);\n    }\n}\n/**\n*/\nexport class PixelDisplayInfo {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pixeldisplayinfo_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get element() {\n        var ret = wasm.__wbg_get_pixeldisplayinfo_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set element(arg0) {\n        wasm.__wbg_set_pixeldisplayinfo_element(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get ra() {\n        var ret = wasm.__wbg_get_pixeldisplayinfo_ra(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ra(arg0) {\n        wasm.__wbg_set_pixeldisplayinfo_ra(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get rb() {\n        var ret = wasm.__wbg_get_pixeldisplayinfo_rb(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set rb(arg0) {\n        wasm.__wbg_set_pixeldisplayinfo_rb(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get rc() {\n        var ret = wasm.__wbg_get_pixeldisplayinfo_rc(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set rc(arg0) {\n        wasm.__wbg_set_pixeldisplayinfo_rc(this.ptr, arg0);\n    }\n}\n/**\n*/\nexport class PixelInfo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PixelInfo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pixelinfo_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get element() {\n        var ret = wasm.__wbg_get_pixelinfo_element(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set element(arg0) {\n        wasm.__wbg_set_pixelinfo_element(this.ptr, arg0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get friction() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_pixelinfo_friction(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set friction(arg0) {\n        wasm.__wbg_set_pixelinfo_friction(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get restitution() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_pixelinfo_restitution(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set restitution(arg0) {\n        wasm.__wbg_set_pixelinfo_restitution(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get inertia() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_pixelinfo_inertia(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set inertia(arg0) {\n        wasm.__wbg_set_pixelinfo_inertia(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get velocity_x() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_pixelinfo_velocity_x(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set velocity_x(arg0) {\n        wasm.__wbg_set_pixelinfo_velocity_x(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get velocity_y() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_pixelinfo_velocity_y(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set velocity_y(arg0) {\n        wasm.__wbg_set_pixelinfo_velocity_y(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    * @returns {boolean | undefined}\n    */\n    get falling() {\n        var ret = wasm.__wbg_get_pixelinfo_falling(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    * @param {boolean | undefined} arg0\n    */\n    set falling(arg0) {\n        wasm.__wbg_set_pixelinfo_falling(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get not_moved_count() {\n        var ret = wasm.__wbg_get_pixelinfo_not_moved_count(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set not_moved_count(arg0) {\n        wasm.__wbg_set_pixelinfo_not_moved_count(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","module.exports = \"precision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\n\\nvoid main() {\\n    uv = position;\\n    gl_Position = vec4(position, 0, 1);\\n}\"","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D map_texture;\\nuniform sampler2D element_texture;\\nuniform int element_count;\\nvarying vec2 uv;\\n\\nvoid main() {\\n    vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\\n    vec4 pixel_info = texture2D(map_texture, textCoord);\\n    int element = int((pixel_info.r * 255.) + 0.1);\\n    vec4 color = texture2D(element_texture, vec2(float(element)/float(element_count),0));\\n\\n    gl_FragColor = color;\\n}\"","module.exports = \"precision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nuniform float scale;\\nuniform vec2 offset;\\n\\nvoid main () {\\n    vec2 p  = position;\\n    p *= scale;\\n    p += offset;\\n    gl_Position = vec4(p, 0, 1);\\n}\"","module.exports = \"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 color;\\n\\nvoid main () {\\n    gl_FragColor = color;\\n}\"","import {Element, MapGenerator} from \"engine\";\r\n\r\nconst elements = [\r\n    {key: Element.Empty, value: {name: \"Empty\", color: [255,255,255,255]}},\r\n    {key: Element.Wall, value: {name: \"Wall\", color: [0,0,0,255]}},\r\n    {key: Element.Sand, value: {name: \"Sand\", color: [194,178,127, 255]}},\r\n    {key: Element.Dirt, value: {name: \"Dirt\", color: [132,57,24,255]}},\r\n    {key: Element.Water, value: {name: \"Water\", color: [44,100,230,255]}}\r\n];\r\n\r\nconst mapSizes = [64, 128, 256, 512];\r\nconst chunkSizes = [16, 32, 64];\r\n\r\nconst mapGenerators = [\r\n    {key: MapGenerator.EMPTY, value: {name: \"Empty\"}},\r\n    {key: MapGenerator.CAVE, value: {name: \"Cave\"}},];\r\n\r\nconst elementColorsArray = () => {\r\n    let result = [];\r\n\r\n    for (let key in elements) {\r\n        if (elements.hasOwnProperty(key)) {\r\n            result = result.concat(elements[key].value.color);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst mapGeneratorByName = name => {\r\n    for (let key in mapGenerators) {\r\n        if (mapGenerators.hasOwnProperty(key)) {\r\n            if (mapGenerators[key].value.name === name) {\r\n                return key;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport {elements, mapSizes, chunkSizes, mapGenerators, elementColorsArray, mapGeneratorByName}","import {config} from \"./main\";\r\n\r\nconst MEAN_FRAMES_SIZE = 100;\r\nconst PIXEL_PROCESSED_FRAMES_SIZE = 10;\r\n\r\nlet fpsLabel = document.getElementById(\"fps\");\r\nlet meanRenderTimeLabel = document.getElementById(\"meanRenderTime\");\r\nlet meanTickTimeLabel = document.getElementById(\"meanTickTime\");\r\nlet lastTickTimeLabel = document.getElementById(\"lastTickTime\");\r\nlet meanPixelsProcessedLabel = document.getElementById(\"meanPixelsProcessed\");\r\nlet lastPixelsProcessedLabel = document.getElementById(\"lastPixelsProcessed\");\r\n\r\nconst fps = {\r\n    mean: 0,\r\n    delta: 0,\r\n    frames: [],\r\n    lastFrameTimeStamp: performance.now(),\r\n\r\n    measure() {\r\n        const now = performance.now();\r\n        const diff = now - this.lastFrameTimeStamp;\r\n        this.lastFrameTimeStamp = now;\r\n        const fps = (1 / diff) * 1000;\r\n        this.delta = diff / 1000;\r\n\r\n        this.frames.push(fps);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst renderTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        if (window.paused) return;\r\n\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst tickTime = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n    startTime:  performance.now(),\r\n\r\n    start() {\r\n        this.startTime = performance.now();\r\n    },\r\n\r\n    stop() {\r\n        const now = performance.now();\r\n        const frameTime = now - this.startTime;\r\n\r\n        this.last = frameTime;\r\n\r\n        lastTickTimeLabel.textContent = window.paused ? `${Math.round(this.last)}ms` : \"\";\r\n\r\n        this.frames.push(frameTime);\r\n        if (this.frames.length > MEAN_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    }\r\n}\r\n\r\nconst pixelsProcessed = {\r\n    mean: 0,\r\n    last: 0,\r\n    frames: [],\r\n\r\n    measure(pixels) {\r\n        this.last = pixels;\r\n\r\n        lastPixelsProcessedLabel.textContent = window.paused ? `${Math.round(this.last)} \r\n        (${percentage(this.last, config.size*config.size)}%)` : \"\";\r\n\r\n        this.frames.push(pixels);\r\n        if (this.frames.length > PIXEL_PROCESSED_FRAMES_SIZE) {\r\n            this.frames.shift();\r\n        }\r\n\r\n        this.mean = measureMean(this.frames);\r\n    },\r\n\r\n    reset() {\r\n        this.mean = 0;\r\n        this.last = 0;\r\n        this.frames = [];\r\n    }\r\n}\r\n\r\nconst measureMean = array => {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        sum += array[i];\r\n    }\r\n\r\n    return  sum / array.length;\r\n}\r\n\r\nconst percentage = (value, max) => {\r\n    return Math.round((100 * value) / max);\r\n}\r\n\r\nconst updateLabels = () => {\r\n    fpsLabel.textContent = `FPS: ${Math.round(fps.mean)}`;\r\n    meanRenderTimeLabel.textContent = `${Math.round(renderTime.mean)}ms`;\r\n    meanTickTimeLabel.textContent = `${Math.round(tickTime.mean)}ms`;\r\n    meanPixelsProcessedLabel.textContent = `${Math.round(pixelsProcessed.mean)} \r\n    (${percentage(Math.round(pixelsProcessed.mean), config.size*config.size)}%)`;\r\n}\r\n\r\nsetInterval(updateLabels, 100);\r\n\r\nexport { fps, renderTime, tickTime, pixelsProcessed};","import {config, createMap, map, nextTick, generateSeed} from \"./main.js\";\r\nimport {elements, mapGenerators, mapGeneratorByName, mapSizes, chunkSizes} from \"./vars\";\r\nimport {pixelsProcessed, tickTime} from \"./performance\";\r\n\r\nvar $ = require( \"jquery\" );\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\n$('document').ready(function(){\r\n    addMapSizes();\r\n    addChunkSizes();\r\n    addMapGenerators();\r\n    addElements();\r\n    updateCreateForm()\r\n\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  CREATE MAP\r\n// -----------------------------------------------------------------------------------------------\r\nlet createButton = $('#create');\r\nlet generateSeedButton = $('#generateSeed');\r\nlet useChunksCheckbox = $('#configUseChunks');\r\nlet chunkSizeSelect = $('#configChunkSize');\r\nlet showActiveChunks = false;\r\nlet showActiveChunksCheckbox = $('#showActiveChunks');\r\n\r\ncreateButton.click(() => {\r\n    config.size = Number($('#configSize').val());\r\n    config.gravity = clamp($('#configGravity').val(), -1, 1);\r\n    config.maxVelocity = clamp($('#configMaxVelocity').val(), 0, 100);\r\n    config.useChunks = useChunksCheckbox.is(\":checked\");\r\n    config.chunkSize = Number(chunkSizeSelect.val());\r\n    config.generator = mapGeneratorByName($('#configGenerator').val());\r\n    config.seed = Number($('#seed').val());\r\n\r\n    createMap()\r\n    updateCreateForm();\r\n});\r\n\r\ngenerateSeedButton.click(() => {\r\n    config.seed = generateSeed();\r\n    updateCreateForm();\r\n});\r\n\r\nconst updateCreateForm = () => {\r\n    $('#configSize').val(config.size);\r\n    $('#configGravity').val(config.gravity);\r\n    $('#configMaxVelocity').val(config.maxVelocity);\r\n    $('#configGenerator').val(mapGenerators[config.generator].value.name);\r\n    $('#seed').val(config.seed);\r\n\r\n    useChunksCheckbox.prop('checked', config.useChunks);\r\n    chunkSizeSelect.val(config.chunkSize);\r\n    chunkSizeSelect.prop('disabled', !config.useChunks);\r\n}\r\n\r\nconst addMapSizes = () => {\r\n    mapSizes.forEach(function (value) {\r\n        let option = `<option>${value}</option>`;\r\n\r\n        $('#configSize').append(option);\r\n    });\r\n}\r\n\r\nconst addChunkSizes = () => {\r\n    chunkSizes.forEach(function (value) {\r\n        let option = `<option>${value}</option>`;\r\n\r\n        $('#configChunkSize').append(option);\r\n    });\r\n}\r\n\r\nconst addMapGenerators = () => {\r\n    for (let key in mapGenerators) {\r\n        if (mapGenerators.hasOwnProperty(key)) {\r\n            let option = `<option>${mapGenerators[key].value.name}</option>`;\r\n\r\n            $('#configGenerator').append(option);\r\n        }\r\n    }\r\n}\r\n\r\nuseChunksCheckbox.change(function() {\r\n    chunkSizeSelect.prop('disabled', !this.checked)\r\n    showActiveChunksCheckbox.prop('disabled', !this.checked)\r\n});\r\n\r\nshowActiveChunksCheckbox.change(function() {\r\n    showActiveChunks = this.checked;\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  ACTIONS\r\n// -----------------------------------------------------------------------------------------------\r\nlet paused = false;\r\nlet playButton = $('#play');\r\nlet pauseButton = $('#pause');\r\nlet nextFrameButton = $('#nextFrame');\r\nlet resetButton = $('#reset');\r\n\r\nplayButton.hide();\r\nnextFrameButton.addClass(\"disabled\");\r\n\r\nplayButton.click(() => togglePause());\r\npauseButton.click(() => togglePause());\r\nnextFrameButton.click(() => nextFrame());\r\nresetButton.click(() => resetMap());\r\n\r\n$('body').keypress(event => {\r\n    // P\r\n    if (event.keyCode === 112) {\r\n        togglePause();\r\n    }\r\n    // F\r\n    else if (event.keyCode === 102) {\r\n        nextFrame();\r\n    }\r\n    // R\r\n    else if (event.keyCode === 114) {\r\n        resetMap();\r\n    }\r\n})\r\n\r\nconst togglePause = () => {\r\n    paused = !paused;\r\n    window.paused = paused;\r\n\r\n    if (paused) {\r\n        playButton.show();\r\n        pauseButton.hide();\r\n        nextFrameButton.removeClass(\"disabled\");\r\n    } else {\r\n        playButton.hide();\r\n        pauseButton.show();\r\n        nextFrameButton.addClass(\"disabled\");\r\n    }\r\n}\r\n\r\nconst nextFrame = () => {\r\n    if (paused) {\r\n        tickTime.start();\r\n        pixelsProcessed.measure(nextTick());\r\n        tickTime.stop();\r\n    }\r\n}\r\n\r\nconst resetMap = () => {\r\n    map.clear();\r\n    pixelsProcessed.reset();\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  ELEMENTS\r\n// -----------------------------------------------------------------------------------------------\r\nlet selectedElement = null;\r\n\r\nconst elementColor = element => {\r\n    return \"rgba(\" + elements[element].value.color.join(\",\")  + \")\";\r\n}\r\n\r\nconst addElements = () => {\r\n    for (let key in elements) {\r\n        if (elements.hasOwnProperty(key)) {\r\n            let radio = `\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"element_${key}\">\r\n                    <label class=\"form-check-label\" for=\"element_${key}\">\r\n                        <i class=\"bi bi-square-fill\" style=\"color: ${elementColor(key)}\"></i>\r\n                        <label>${elements[key].value.name}</label>\r\n                    </label>\r\n                </div>`;\r\n\r\n            $('#painting').append(radio);\r\n            $('#element_' + key + '').change(() => selectedElement = Number(key));\r\n        }\r\n    }\r\n\r\n    // Select Sand by default\r\n    selectedElement = 2;\r\n    $('#element_2').attr('checked', true)\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  BRUSH SETTINGS\r\n// -----------------------------------------------------------------------------------------------\r\nlet brushSize = {\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 5\r\n}\r\n\r\nlet brushSizeSlider = $('#brushSize');\r\n\r\nbrushSizeSlider.on(\"change\", function () {\r\n    brushSize.value = clamp(Number($(this).val()), brushSize.min, brushSize.max);\r\n});\r\n\r\n$(window).bind('mousewheel DOMMouseScroll', function(event){\r\n    if (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0) {\r\n        brushSize.value = clamp(brushSize.value + brushSize.step, brushSize.min, brushSize.max);\r\n        brushSizeSlider.val(brushSize.value);\r\n    } else {\r\n        brushSize.value = clamp(brushSize.value - brushSize.step, brushSize.min, brushSize.max);\r\n        brushSizeSlider.val(brushSize.value);\r\n    }\r\n});\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  PIXEL INSPECTION\r\n// -----------------------------------------------------------------------------------------------\r\nlet inspectPixelPosition = null;\r\nlet inspecting = false;\r\nlet inspectRepeat = null;\r\nlet inspectCheckBox = $('#inspectCheck');\r\nlet inspectDetails = $('#inspectDetails');\r\n\r\ninspectDetails.hide();\r\n\r\ninspectCheckBox.click(() => {\r\n    if (inspectCheckBox.prop('checked')) {\r\n        inspecting = true;\r\n        clearInterval(inspectRepeat);\r\n        inspectRepeat = window.setInterval(() => inspectPixel(), 100);\r\n    } else {\r\n        inspecting = false;\r\n        clearInterval(inspectRepeat);\r\n    }\r\n})\r\n\r\nconst findInspectPixelPosition = event => {\r\n    if (inspectCheckBox.prop('checked')) {\r\n        inspectPixelPosition = getPixelPosition(event);\r\n    } else {\r\n        inspectPixelPosition = null;\r\n    }\r\n}\r\n\r\nconst inspectPixel = () => {\r\n    if (inspecting && inspectPixelPosition) {\r\n        let pixel = map.pixel_info(inspectPixelPosition[0], inspectPixelPosition[1])\r\n\r\n        if (pixel) {\r\n            inspectDetails.show();\r\n            $('#inspectElement').text(elements[pixel.element].value.name);\r\n            $('#inspectPosition').text(\"(\" + inspectPixelPosition[0] + \", \" + inspectPixelPosition[1] + \")\");\r\n\r\n            if (pixel.velocity_x !== undefined && pixel.velocity_y !== undefined) {\r\n                $('#inspectVelocity').text(\"(\" + pixel.velocity_x + \", \" + pixel.velocity_y + \")\");\r\n                $('#inspectVelocityRow').show();\r\n            } else {\r\n                $('#inspectVelocityRow').hide();\r\n            }\r\n\r\n            if (pixel.falling !== undefined) {\r\n                $('#inspectFalling').text(pixel.falling);\r\n                $('#inspectFallingRow').show();\r\n            } else {\r\n                $('#inspectFallingRow').hide();\r\n            }\r\n\r\n            if (pixel.not_moved_count !== undefined) {\r\n                $('#inspectNotMovedCount').text(pixel.not_moved_count);\r\n                $('#inspectNotMovedCountRow').show();\r\n            } else {\r\n                $('#inspectNotMovedCountRow').hide();\r\n            }\r\n        }\r\n    } else {\r\n        inspectDetails.hide();\r\n    }\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  PAINTING\r\n// -----------------------------------------------------------------------------------------------\r\nlet painting = false;\r\nlet lastPaint = null;\r\nlet repeat = null;\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\n    event.preventDefault();\r\n    painting = true;\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n    paint(event);\r\n    lastPaint = event;\r\n});\r\n\r\ndocument.body.addEventListener(\"mouseup\", event => {\r\n    clearInterval(repeat);\r\n    if (painting) {\r\n        event.preventDefault();\r\n        lastPaint = null;\r\n        painting = false;\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", event => {\r\n    clearInterval(repeat);\r\n    smoothPaint(event);\r\n    findInspectPixelPosition(event);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseleave\", () => {\r\n    clearInterval(repeat);\r\n    lastPaint = null;\r\n    inspectPixelPosition = null;\r\n});\r\n\r\nconst paint = event => {\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let pixelPosition = getPixelPosition(event);\r\n\r\n    map.insert(pixelPosition[0], pixelPosition[1], selectedElement, brushSize.value);\r\n};\r\n\r\nconst smoothPaint = event => {\r\n    clearInterval(repeat);\r\n    repeat = window.setInterval(() => paint(event), 100);\r\n\r\n    let startEvent = { clientX: event.clientX, clientY: event.clientY };\r\n\r\n    if (!painting) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    paint(startEvent);\r\n\r\n    if (lastPaint) {\r\n        while (eventDistance(startEvent, lastPaint) > 1 / 3) {\r\n            let d = eventDistance(startEvent, lastPaint);\r\n            startEvent = add(\r\n                startEvent,\r\n                scale(norm(sub(lastPaint, event)), Math.min(1 / 3, d))\r\n            );\r\n            i++;\r\n            if (i > 1000) {\r\n                break;\r\n            }\r\n            paint(startEvent);\r\n        }\r\n    }\r\n    lastPaint = event;\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\n//  UTILS\r\n// -----------------------------------------------------------------------------------------------\r\n\r\nconst getPixelPosition = event => {\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const scaleX = canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width;\r\n    const scaleY = canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height;\r\n\r\n    const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n    const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n    const x = Math.max(Math.min(Math.floor(canvasLeft), config.size - 1), 0);\r\n    const y = Math.max(Math.min(Math.floor(canvasTop), config.size - 1), 0);\r\n\r\n    return [x, y];\r\n}\r\n\r\nconst eventDistance = (a, b) => {\r\n    return Math.sqrt(\r\n        Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\r\n        2\r\n    );\r\n};\r\n\r\nconst add = (a, b) => {\r\n    return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\r\n};\r\n\r\nconst sub = (a, b) => {\r\n    return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\r\n};\r\n\r\nconst norm = a => {\r\n    let mag = magnitude(a);\r\n    return { clientX: a.clientX / mag, clientY: a.clientY / mag };\r\n};\r\n\r\nconst scale = (a, s) => {\r\n    return { clientX: a.clientX * s, clientY: a.clientY * s };\r\n};\r\n\r\nconst magnitude = a => {\r\n    return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\r\n};\r\n\r\nconst clamp = function(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nexport {showActiveChunks}","import {Map, MapConfig, MapGenerator} from \"./node_modules/engine/engine.js\";\r\nimport { startWebGL } from \"./render/render\";\r\nimport {} from \"./ui\";\r\nimport {fps, pixelsProcessed, renderTime, tickTime} from \"./performance\";\r\n\r\nconst generateSeed = () => {\r\n    return Math.floor(Math.random() * Math.floor(10000));\r\n}\r\n\r\nlet config = {\r\n    size: 256,\r\n    gravity: 0.2,\r\n    maxVelocity: 10,\r\n    useChunks: true,\r\n    chunkSize: 32,\r\n    generator: MapGenerator.EMPTY,\r\n    seed: 1,\r\n}\r\n\r\nlet map;\r\nlet drawMap;\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\nconst createMap = () => {\r\n    map = Map.new(MapConfig.new(\r\n        config.size,\r\n        config.gravity,\r\n        config.maxVelocity,\r\n        config.useChunks,\r\n        config.chunkSize,\r\n        config.seed),\r\n        Number(config.generator));\r\n    canvas.width = config.size * Math.ceil(window.devicePixelRatio);\r\n    canvas.height = config.size * Math.ceil(window.devicePixelRatio);\r\n    drawMap = startWebGL({ canvas, map, config });\r\n\r\n    pixelsProcessed.reset();\r\n}\r\n\r\ncreateMap();\r\n\r\nconst renderLoop = () => {\r\n    fps.measure();\r\n\r\n    if (!window.paused) {\r\n        tickTime.start();\r\n        pixelsProcessed.measure(nextTick());\r\n        tickTime.stop();\r\n    }\r\n\r\n    renderTime.start();\r\n    drawMap();\r\n    renderTime.stop();\r\n\r\n    window.animationId = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nconst nextTick = () => {\r\n    return map.tick(fps.delta);\r\n}\r\n\r\nrenderLoop();\r\n\r\nexport { canvas, config, map, createMap, nextTick, generateSeed};","import {elements, elementColorsArray} from \"../vars\";\r\nimport {showActiveChunks} from \"../ui\";\r\nimport { memory } from \"engine/engine_bg\";\r\n\r\nconst reglBuilder = require(\"regl\");\r\n\r\nlet map_vert = require(\"./shaders/map.vert\");\r\nlet map_frag = require(\"./shaders/map.frag\");\r\nlet chunk_vert = require(\"./shaders/chunk.vert\");\r\nlet chunk_frag = require(\"./shaders/chunk.frag\");\r\n\r\nlet startWebGL = ({ canvas, map, config }) => {\r\n    const regl = reglBuilder({\r\n        canvas\r\n    });\r\n\r\n    const mapSize = map.config().size;\r\n\r\n    // Texture with colors for all elements\r\n    const elementTexture = regl.texture({\r\n        width: elements.length,\r\n        height: 1,\r\n        type: 'uint8',\r\n        format: 'rgba',\r\n        data: new Uint8Array(elementColorsArray()),\r\n    });\r\n\r\n    // Texture with map pixels\r\n    const mapTexture = regl.texture({\r\n        width: mapSize,\r\n        height: mapSize,\r\n        type: 'uint8',\r\n        format: 'rgba',\r\n        data: new Uint8Array(memory.buffer, map.display(), mapSize * mapSize * 4)\r\n    });\r\n\r\n    // Draw all map pixels\r\n    let drawMap = regl({\r\n        vert: map_vert,\r\n        frag: map_frag,\r\n        uniforms: {\r\n            element_texture: elementTexture,\r\n            element_count: elements.length,\r\n            map_texture: () => {\r\n                return mapTexture({\r\n                    width: mapSize,\r\n                    height: mapSize,\r\n                    data: new Uint8Array(memory.buffer, map.display(), mapSize * mapSize * 4) });\r\n            },\r\n        },\r\n        attributes: {\r\n            position: [[-1, 4], [-1, -1], [4, -1]]\r\n        },\r\n        count: 3,\r\n    });\r\n\r\n    // Draw a single chunk\r\n    const drawChunk = regl({\r\n        vert: chunk_vert,\r\n        frag: chunk_frag,\r\n        attributes: {\r\n            position: [[-1, -1], [1, -1], [1, 1], [-1, 1]],\r\n        },\r\n        uniforms: {\r\n            color: [0, 1, 0, 1],\r\n            scale: regl.prop('scale'),\r\n            offset: regl.prop('offset'),\r\n        },\r\n        count: 4,\r\n        lineWidth: 1,\r\n        primitive: 'line loop'\r\n    });\r\n\r\n    // Load all map chunks\r\n    let chunks = (() => {\r\n        let chunks = [];\r\n\r\n        if (config.useChunks) {\r\n            let scale = config.chunkSize / mapSize;\r\n\r\n            for (let i = 0; i < map.chunks_count(); i++) {\r\n                let chunk = map.chunk(i);\r\n\r\n                chunks.push({\r\n                    scale: scale,\r\n                    offset: [-1 + scale + 2*(chunk.x()/config.size), 1 - scale - 2*(chunk.y()/config.size)],\r\n                });\r\n            }\r\n        }\r\n\r\n        return chunks;\r\n    })();\r\n\r\n    // Draw active chunks\r\n    const drawActiveChunks = () => {\r\n        if (config.useChunks && showActiveChunks) {\r\n            drawChunk(chunks.filter((_, index) => map.chunk(index).active_next_tick()));\r\n        }\r\n    }\r\n\r\n    const drawScene = () => {\r\n        drawMap();\r\n    }\r\n\r\n    const drawDebugInfo = () => {\r\n        drawActiveChunks();\r\n    }\r\n\r\n    return () => {\r\n        regl.poll();\r\n\r\n        drawDebugInfo();\r\n        drawScene();\r\n    };\r\n};\r\n\r\nexport { startWebGL};"],"sourceRoot":""}